{"version":3,"file":"edit_tree.min.js","sources":["../src/edit_tree.js"],"sourcesContent":["/// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see &lt;http://www.gnu.org/licenses/&gt;.\n// Project implemented by the &quot;Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU&quot;.\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n/*\n * Display information about all the gradereport_gradeconfigwizard modules in the requested course. *\n * @package gradeconfigwizard\n * @copyright 2023 Proyecto UNIMOODLE\n * @author UNIMOODLE Group (Coordinator) &lt;direccion.area.estrategia.digital@uva.es&gt;\n * @author Joan Carbassa (IThinkUPC) &lt;joan.carbassa@ithinkupc.com&gt;\n * @author Yerai Rodríguez (IThinkUPC) &lt;yerai.rodriguez@ithinkupc.com&gt;\n * @author Marc Geremias (IThinkUPC) &lt;marc.geremias@ithinkupc.com&gt;\n * @author Miguel Gutiérrez (UPCnet) &lt;miguel.gutierrez.jariod@upcnet.es&gt;\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n*/\n\n\n/* START: VARIABLES */\n\nlet gradeconfigwizarddashboardtable = document.getElementById('gradeconfigwizard-dashboard-table');\nlet gradeconfigwizarddashboardtablebody = gradeconfigwizarddashboardtable.querySelector('tbody');\n\nlet courseidglobal;\nlet actionurlglobal;\nlet urlformulacreatorglobal;\nlet gradeitemidglobal;\nlet wwwrootglobal;\n\n/* END: VARIABLES */\n\n\n/* START: TEMPLATES */\n\nconst removeitemiconhtml = (randomid) => `<i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" \ndata-randomid=\"${randomid}\" title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>`;\n\nconst gradeitemrowhtml = (randomid, gradecategoryid, gradeitemid, depth, parentrandomid, alreadycreatedcategory) => `\n    <tr data-gradecategoryid=\"${gradecategoryid}\" data-gradeitemid=\"${gradeitemid}\"\n     data-itemtype=\"manual\" data-randomid=\"${randomid}\" id=\"${randomid}\" data-categorydepth=\"${depth}\">\n        <td data-id=\"${gradeitemid}\" data-displayname=\"\">\n            ${getDepthPadding(depth)}\n            <i class=\"fa fa-square-o fa-fw icon itemicon\" title=\"Category\"\n             role=\"img\" aria-label=\"Category\"></i>\n            <input class=\"subcategoryname\" name=\"subcategoryname[${randomid}]\" \n            placeholder=\"Grade item name\" value=\"\">${removeitemiconhtml(randomid)}\n            ${alreadycreatedcategory} \n        </td>\n        <td>\n            <span class=\"p-2\"></span>\n            <input type=\"text\" name=\"weight\" id=\"\" value=\"1\" size=\"4\" disabled=\"\"\n             class=\"gradeitem-weight form-control d-inline-block\">\n        </td>\n        <td>\n            <div class=\"dropdown\">\n                <button class=\"btn btn-secondary dropdown-toggle\" \n                type=\"button\" id=\"dropdownMenuButton-${gradecategoryid}-${gradeitemid}\" data-toggle=\"dropdown\" \n                aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Edit\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-${gradecategoryid}-${gradeitemid}\">\n                    ${gradeitemeditactioneditcalculationhtml}\n                    ${gradeitemeditactiondisablehtml}\n                </div>\n            </div>\n        </td>\n    </tr>\n    `;\n\nconst gradeitemcategoryrowhtml = (randomid, gradecategoryid, gradeitemid, depth, parentrelativepath) => `\n    <tr data-gradecategoryid=\"${gradecategoryid}\" data-gradeitemid=\"${gradeitemid}\" \n    data-itemtype=\"category\" data-randomid=\"${randomid}\" id=\"${randomid}\" \n    data-categorydepth=\"${depth}\" data-parentrelativepath=\"${parentrelativepath}\">\n        <td data-id=\"${gradeitemid}\" data-displayname=\"\">\n            ${getDepthPadding(depth)}\n            <i class=\"fa fa-folder fa-fw icon itemicon\" title=\"Category\" role=\"img\" aria-label=\"Category\"></i>\n            <input class=\"subcategoryname\" name=\"randomnames_dictionary[${randomid}]\"\n             placeholder=\"Category name\" value=\"\">${removeitemiconhtml(randomid)}\n            <input type=\"hidden\" name=\"relativepaths[${randomid}]\" value=\"${parentrelativepath}\">\n        </td>\n        <td>\n            <span class=\"p-2\"></span>\n            <input type=\"text\" name=\"weight\" id=\"\" value=\"1\" \n            size=\"4\" disabled=\"\" class=\"gradeitem-weight form-control d-inline-block\">\n        </td>\n        <td>\n            <div class=\"dropdown\">\n                <button class=\"btn btn-secondary dropdown-toggle\" \n                type=\"button\" id=\"dropdownMenuButton-${gradecategoryid}-${gradeitemid}\" \n                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Edit\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-${gradecategoryid}-${gradeitemid}\">\n                    ${gradeitemeditactionaddgradeitemcategoryhtml}\n                    ${gradeitemeditactionaddgradeitemhtml}\n                    ${gradeitemeditactiondisablehtml}\n                </div>\n            </div>\n        </td>\n    </tr>\n    `;\n\nconst gradeitemcategorytotalrowhtml = (randomid, gradecategoryid, gradeitemid, depth) => `\n    <tr data-gradecategoryid=\"${gradecategoryid}\" data-gradeitemid=\"${gradeitemid}\" data-itemtype=\"category\" \n    data-randomid=\"${randomid}\" data-istotal=\"1\" id=\"${randomid}\" data-categorydepth=\"${depth}\">\n        <td data-id=\"${gradeitemid}\" data-displayname=\"\">\n            ${getDepthPadding(depth)}\n            <i class=\"fa fa-list fa-fw icon itemicon\" title=\"Category total\" role=\"img\" aria-label=\"Category total\"></i>\n            <input class=\"subcategoryname\" name=\"subcategoryname\" value=\"\" disabled=\"true\">\n        </td>\n        <td>\n        </td>\n        <td>\n            <div class=\"dropdown\">\n                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" \n                id=\"dropdownMenuButton-${gradecategoryid}-${gradeitemid}\" data-toggle=\"dropdown\" \n                aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Edit\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-${gradecategoryid}-${gradeitemid}\">\n                    ${gradeitemeditactioneditcalculationhtml}\n                </div>\n            </div>\n        </td>\n    </tr>\n    `;\n\nconst gradeitemeditactionaddgradeitemcategoryhtml = `\n    <a class=\"add-gradeitemcategory-btn dropdown-item\" href=\"#\">\n        <i class=\"fa fa-plus fa-fw icon itemicon\" title=\"Add category\" role=\"img\" aria-label=\"Add category\"></i>\n        Add category\n    </a>\n    `;\n\nconst gradeitemeditactionaddgradeitemhtml = `\n    <a class=\"add-gradeitem-btn dropdown-item\" href=\"#\">\n        <i class=\"fa fa-plus fa-fw icon itemicon\" title=\"Add gradeitem\" role=\"img\" aria-label=\"Add gradeitem\"></i>\n        Add grade item\n    </a>\n    `;\n\nconst gradeitemeditactioneditcalculationhtml = `\n    <a class=\"dropdown-item\" href=\"${urlformulacreatorglobal}id=${courseidglobal}&gradeitemid=${gradeitemidglobal}\">\n    <i class=\"fa fa-calculator fa-fw icon itemicon\" title=\"\" role=\"img\" aria-label=\"\"></i>\n    Edit calculation\n    </a>\n    `;\n\n\nconst gradeitemeditactiondisablehtml = `\n    <a class=\"gradeitem-disable-btn dropdown-item\" href=\"#\">\n        <i class=\"fa fa-minus fa-fw icon itemicon\" title=\"\" role=\"img\" aria-label=\"\"></i>\n        Disable\n    </a>\n    `;\n\n\n/* END: TEMPLATES */\n\n/* START: FUNCTIONS */\n\nlet defaultPathSeparator = '/';\n\n\nconst generateUniqueId = () => {\n    let randomid = null;\n    while (randomid === null || document.getElementById(randomid) !== null) {\n        // generate a 8 chars long random id\n        randomid = Math.random().toString(36).substring(2, 10);\n    }\n    return randomid;\n};\n\nconst getDepthPadding = (depth) => {\n    depth = parseInt(depth);\n    let response = '';\n    for (let i = 0; i < depth; i++) {\n        response += '<span class=\"p-2\"></span>';\n    }\n    return response;\n};\n\nconst addGradeitemAfterRow = (row) => {\n    disableDragging();\n    let gradecategoryid = row.dataset.gradecategoryid;\n    let gradeitemid = row.dataset.gradeitemid;\n    let depth = row.dataset.categorydepth;\n\n    let parentrandomid = row.dataset.randomid;\n\n    let newrandomid = generateUniqueId();\n    let newdepth = parseInt(depth) + 1;\n\n    let alreadycreatedcategory;\n\n    // The \"/\" is used to identify that the parent is a category already created and then the value\n    // is the randomid of the category, otherwise if the parent is a category that isn't created yet\n    // the value is the randomid of the parent category.\n    if (parentrandomid == \"\") {\n        alreadycreatedcategory = `<input type=\"hidden\" name=\"gradeitemparent[${newrandomid}]\" value=\"/${gradecategoryid}\">`;\n    } else {\n        alreadycreatedcategory = `<input type=\"hidden\" name=\"gradeitemparent[${newrandomid}]\" value=\"${parentrandomid}\">`;\n    }\n\n    let newgradeitemrowhtml =\n        gradeitemrowhtml(newrandomid, gradecategoryid, gradeitemid, newdepth, parentrandomid, alreadycreatedcategory);\n    row.insertAdjacentHTML('afterend', newgradeitemrowhtml);\n\n    let newgradeitemrow = document.getElementById(newrandomid);\n\n    newgradeitemrow.querySelector('.remove-item-icon').addEventListener('click', removeGradeitemButtonClickCallback);\n    newgradeitemrow.querySelector('.gradeitem-disable-btn').addEventListener('click', disableGradeitemButtonClickCallback);\n\n    return newgradeitemrow;\n};\n\nconst removeGradeitemRow = (gradeitemrow) => {\n    gradeitemrow.remove();\n    enableDragging();\n};\n\nconst disableGradeitem = (gradeitemrow) => {\n    let action = 'disablegradeitem';\n    let actiongradeitemid = gradeitemrow.dataset.gradeitemid;\n\n    window.location.href = actionurlglobal + '&action=' + action + '&actiongradeitemid=' + actiongradeitemid;\n};\n\nconst disableGradeitemCategory = (gradeitemrow) => {\n    let action = 'disablegradeitemcategory';\n    let actiongradeitemid = gradeitemrow.dataset.gradeitemid;\n    if (gradeitemrow.textContent.includes(\"[[DISABLED]]\")) {\n        return;\n    }\n    // If the category is already disabled, don't do anything\n    window.location.href = actionurlglobal + '&action=' + action + '&actiongradeitemid=' + actiongradeitemid;\n};\n\n\nconst disableDragging = () => {\n    let table = document.getElementById('gradeconfigwizard-dashboard-table');\n    for (let element of table.querySelectorAll('tr')) {\n        if (element.dataset.todragg == 'true') {\n            element.draggable = false;\n            let moveicon = element.querySelector('#move-icon-display');\n            moveicon.classList.add(\"gradeconfigwizard-draggingcontent-color\");\n        }\n    }\n};\n\nconst enableDragging = () => {\n    let table = document.getElementById('gradeconfigwizard-dashboard-table');\n    let abletodragg = true;\n    for (let element of table.querySelectorAll('tr')) {\n        if (element.dataset.randomid != undefined && element.dataset.randomid != \"\") {\n            abletodragg = false;\n            break;\n        }\n    }\n\n    if (abletodragg) {\n        for (let element of table.querySelectorAll('tr')) {\n            if (element.dataset.todragg == 'true') {\n                element.draggable = true;\n                let moveicon = element.querySelector('#move-icon-display');\n                moveicon.classList.remove(\"gradeconfigwizard-draggingcontent-color\");\n            }\n        }\n    }\n};\n\nconst addGradeitemCategoryAfterRow = (row) => {\n    disableDragging();\n    let gradecategoryid = row.dataset.gradecategoryid;\n    let gradeitemid = row.dataset.gradeitemid;\n    let depth = row.dataset.categorydepth;\n\n    let newrandomid = generateUniqueId();\n    let newdepth = parseInt(depth) + 1;\n\n    let parentrelativepath = row.dataset.parentrelativepath;\n\n    // In case the new category is a subcategory of an already created category\n    if (parentrelativepath == undefined) {\n        parentrelativepath = gradecategoryid;\n    }\n    // In case the new category is a subcategory of the course\n    if (gradecategoryid == \"\" && depth == \"0\") {\n        parentrelativepath = courseidglobal;\n    }\n\n    parentrelativepath = parentrelativepath + defaultPathSeparator + newrandomid;\n\n    let newgradeitemcategoryrowhtml =\n        gradeitemcategoryrowhtml(newrandomid, gradecategoryid, gradeitemid, newdepth, parentrelativepath);\n    row.insertAdjacentHTML('afterend', newgradeitemcategoryrowhtml);\n\n    let newgradeitemcategoryrow = document.getElementById(newrandomid);\n\n    newgradeitemcategoryrow.querySelector('.remove-item-icon')\n        .addEventListener('click', removeGradeitemCategoryButtonClickCallback);\n\n    newgradeitemcategoryrow.querySelector('.add-gradeitemcategory-btn')\n        .addEventListener('click', addGradeitemCategoryButtonClickCallback);\n    newgradeitemcategoryrow.querySelector('.add-gradeitem-btn')\n        .addEventListener('click', addGradeitemButtonClickCallback);\n    newgradeitemcategoryrow.querySelector('.gradeitem-disable-btn').addEventListener('click', disableGradeitemButtonClickCallback);\n\n    let newgradecategorytotaldepth = parseInt(newdepth) + 1;\n    let newgradeitemcategorytotalrowhtml =\n        gradeitemcategorytotalrowhtml(newrandomid, gradecategoryid, gradeitemid, newgradecategorytotaldepth);\n    newgradeitemcategoryrow.insertAdjacentHTML('afterend', newgradeitemcategorytotalrowhtml);\n\n    var newgradeitemcategorytotalrow =\n        gradeconfigwizarddashboardtablebody.querySelector('[data-randomid=\"' + newrandomid + '\"][data-istotal=\"1\"]');\n\n    newgradeitemcategoryrow.querySelector('.subcategoryname').addEventListener('input', function() {\n        newgradeitemcategorytotalrow.querySelector('input.subcategoryname').value = 'Total ' + this.value;\n    });\n\n    return newgradeitemcategoryrow;\n};\n\nconst addDashboardModalClasses = () => {\n    let editcontent = document.getElementById('gradeconfigwizard-modal');\n    editcontent.classList.add('modal');\n    editcontent.classList.add('modal-content');\n};\n\nconst removeDashboardModalClasses = () => {\n    let editcontent = document.getElementById('gradeconfigwizard-modal');\n    editcontent.classList.remove('modal');\n    editcontent.classList.remove('modal-content');\n};\n\nconst addDashboardBackdropModal = () => {\n    let existentbackroundmodal = document.getElementById('background-gradeconfigwizardmodal');\n    if (existentbackroundmodal === null) {\n        let backgroundmodal = document.createElement('div');\n        backgroundmodal.setAttribute('id', 'background-gradeconfigwizardmodal');\n        backgroundmodal.classList.add('modal-backdrop');\n        backgroundmodal.classList.add('show');\n        let footer = document.getElementById('page-footer');\n        footer.appendChild(backgroundmodal);\n    }\n};\n\nconst removeDashboardBackdropModal = () => {\n    let backgroundmodal = document.getElementById('background-gradeconfigwizardmodal');\n    let footer = document.getElementById('page-footer');\n    if (backgroundmodal) {\n        footer.removeChild(backgroundmodal);\n    }\n};\n\nconst addButtonsHiddenClass = () => {\n    let buttonstop = document.getElementById('buttons-top');\n    buttonstop.classList.add(\"hidden\");\n    let buttonsbottom = document.getElementById('buttons-bottom');\n    buttonsbottom.classList.add(\"hidden\");\n};\n\nconst removeButtonsHiddenClass = () => {\n    let buttonstop = document.getElementById('buttons-top');\n    buttonstop.classList.remove(\"hidden\");\n    let buttonsbottom = document.getElementById('buttons-bottom');\n    buttonsbottom.classList.remove(\"hidden\");\n};\n\nconst enableEditMode = () => {\n    enableModal();\n};\n\nconst disableEditMode = () => {\n    disableModal();\n};\n\nconst enableModal = () => {\n    addDashboardModalClasses();\n    addDashboardBackdropModal();\n    removeButtonsHiddenClass();\n};\n\nconst disableModal = () => {\n    removeDashboardModalClasses();\n    removeDashboardBackdropModal();\n    addButtonsHiddenClass();\n};\n\nlet dragged = null;\nlet target = null;\nlet draggingchilds = [];\nlet dropactionredirectinprogress = false;\n\n// DRAG EVENTS FUNCTIONS\nconst dragstart = (event) => {\n    // Make the row invisible until the dragend event is fired\n    setTimeout(()=> {\n        event.target.className = \"invisible\";\n        }, 0);\n    dragged = event.target;\n    let under = false;\n\n    if (dragged.dataset.itemtype == 'manual' || dragged.dataset.itemtype == 'mod') {\n        return;\n    }\n\n    let array = Array.from(gradeconfigwizarddashboardtablebody.querySelectorAll('tr'));\n    let element;\n    for (element of array) {\n        if (element.dataset.gradeitemid == dragged.dataset.gradeitemid) {\n            under = true;\n        }\n        if (under && element.dataset.categorydepth > dragged.dataset.categorydepth) {\n            // Modify the displaytype of the element to none\n            //element.style.display = 'none';\n            element.classList.add(\"gradeconfigwizard-draggingcontent\");\n            // And save the current elemnti into an array\n            draggingchilds.push(element);\n            if (element.dataset.gradeitemid == dragged.dataset.gradeitemid) {\n                break;\n            }\n        }\n    }\n};\n\nconst dragend = (event) => {\n    if (dropactionredirectinprogress === false) {\n        for (let element of draggingchilds) {\n            element.classList.remove(\"gradeconfigwizard-draggingcontent\");\n        }\n        event.target.className = '';\n    }\n};\n\nconst dragover = (event) => {\n    // Get the element that is being on the bottom of the dragged element\n    // prevent default to allow drop\n    event.preventDefault();\n\n    target = event.target.closest('tr');\n    target.className = 'big-separator';\n};\n\nconst dragleave = (event) => {\n    target = event.target.closest('tr');\n    target.className = 'small-separator';\n};\n\nconst drop = () => {\n    let move = \"after\";\n    if (target.dataset.istotal == '0'\n        && target.dataset.itemtype == 'category'\n        || target.dataset.itemtype == 'course') {\n        move = \"inside\";\n    }\n    dropactionredirectinprogress = true;\n\n    window.location.href = wwwrootglobal + '/grade/report/gradeconfigwizard/index.php'\n        + '?id=' + courseidglobal\n        + '&draggedid=' + dragged.dataset.gradeitemid\n        + '&targetid=' + target.dataset.gradeitemid\n        + '&move=' + move;\n};\n\nconst removeGradeitemCategory = (gradeitemcategoryrow) => {\n\n    let parentgradecategorydepth = gradeitemcategoryrow.dataset.categorydepth;\n    let currentrow = gradeitemcategoryrow.nextElementSibling;\n    while (currentrow) {\n        let currentdepth = currentrow.dataset.categorydepth;\n        if (parentgradecategorydepth >= currentdepth) {\n            break;\n        }\n        if (currentrow.dataset.itemtype === 'category' && currentrow.dataset.istotal !== '1') {\n            removeGradeitemCategory(currentrow);\n        } else {\n            removeGradeitemRow(currentrow);\n        }\n        currentrow = gradeitemcategoryrow.nextElementSibling;\n    }\n    gradeitemcategoryrow.remove();\n    enableDragging();\n};\n\n\n/* END: FUNCTIONS */\n\n/* START: CALLBACKS */\n\nconst gradeDashboardOnChangeCallback = () => {\n    let dashboardeditingelements = document.querySelectorAll('#gradeconfigwizard-dashboard-table input.subcategoryname');\n    if (dashboardeditingelements.length > 0) {\n        enableEditMode();\n    } else {\n        disableEditMode();\n    }\n};\n\nconst targetNode = document.getElementById('gradeconfigwizard-dashboard-table');\nconst config = {attributes: true, childList: true, subtree: true};\n\nconst mode = (mutationList) => {\n    for (const mutation of mutationList) {\n        if (mutation.type === \"attributes\") {\n            gradeDashboardOnChangeCallback();\n        }\n    }\n};\nconst observer = new MutationObserver(mode);\nobserver.observe(targetNode, config);\n\nconst addGradeitemButtonClickCallback = (e) => {\n    let targetrow = e.target.closest('tr');\n    let newrow = addGradeitemAfterRow(targetrow);\n    newrow.querySelector('input.subcategoryname').focus();\n};\n\nconst removeGradeitemButtonClickCallback = (e) => {\n    let targetrow = e.target.closest('tr');\n    removeGradeitemRow(targetrow);\n};\n\nconst disableGradeitemButtonClickCallback = (e) => {\n    let targetrow = e.target.closest('tr');\n    if (targetrow.dataset.itemtype === 'mod' || targetrow.dataset.itemtype === 'manual') {\n        disableGradeitem(targetrow);\n    } else if (targetrow.dataset.itemtype === 'category') {\n        disableGradeitemCategory(targetrow);\n    }\n};\n\n\nconst addGradeitemCategoryButtonClickCallback = (e) => {\n    let targetrow = e.target.closest('tr');\n    let newrow = addGradeitemCategoryAfterRow(targetrow);\n    newrow.querySelector('input.subcategoryname').focus();\n};\n\nconst removeGradeitemCategoryButtonClickCallback = (e) => {\n    let targetrow = e.target.closest('tr');\n    removeGradeitemCategory(targetrow);\n};\n\n/* END: CALLBACKS */\n\n/* START: EVENT LISTENERS DECLARATION */\n\nexport const init = (courseid, urlformulacreator, gradeitemid, wwwroot, actionurl) => {\n    courseidglobal = courseid;\n    urlformulacreatorglobal = urlformulacreator;\n    gradeitemidglobal = gradeitemid;\n    wwwrootglobal = wwwroot;\n    actionurlglobal = actionurl;\n    gradeconfigwizarddashboardtablebody.querySelectorAll('.add-gradeitemcategory-btn').forEach(\n        function(row) {\n            row.addEventListener('click', addGradeitemCategoryButtonClickCallback);\n        }\n    );\n\n    gradeconfigwizarddashboardtablebody.querySelectorAll('.add-gradeitem-btn').forEach(\n        function(row) {\n            row.addEventListener('click', addGradeitemButtonClickCallback);\n        }\n    );\n\n    gradeconfigwizarddashboardtablebody.querySelectorAll('.gradeitem-disable-btn').forEach(\n        function(row) {\n            row.addEventListener('click', disableGradeitemButtonClickCallback);\n        }\n    );\n\n// Drag events listeners\n    gradeconfigwizarddashboardtablebody.querySelectorAll('tr').forEach(\n        function(row) {\n            row.addEventListener('dragstart', dragstart);\n            row.addEventListener('dragend', dragend);\n            row.addEventListener('dragover', dragover);\n            row.addEventListener('dragleave', dragleave);\n            row.addEventListener('drop', drop);\n        }\n    );\n};\n\n/* END: EVENT LISTENERS DECLARATION */"],"names":["courseidglobal","actionurlglobal","urlformulacreatorglobal","gradeitemidglobal","wwwrootglobal","gradeconfigwizarddashboardtablebody","document","getElementById","querySelector","removeitemiconhtml","randomid","gradeitemeditactionaddgradeitemcategoryhtml","gradeitemeditactionaddgradeitemhtml","gradeitemeditactioneditcalculationhtml","gradeitemeditactiondisablehtml","generateUniqueId","Math","random","toString","substring","getDepthPadding","depth","parseInt","response","i","addGradeitemAfterRow","row","disableDragging","alreadycreatedcategory","gradecategoryid","dataset","gradeitemid","categorydepth","parentrandomid","newrandomid","newdepth","newgradeitemrowhtml","gradeitemrowhtml","insertAdjacentHTML","newgradeitemrow","addEventListener","removeGradeitemButtonClickCallback","disableGradeitemButtonClickCallback","removeGradeitemRow","gradeitemrow","remove","enableDragging","table","element","querySelectorAll","todragg","draggable","classList","add","abletodragg","undefined","addGradeitemCategoryAfterRow","parentrelativepath","newgradeitemcategoryrowhtml","gradeitemcategoryrowhtml","newgradeitemcategoryrow","removeGradeitemCategoryButtonClickCallback","addGradeitemCategoryButtonClickCallback","addGradeitemButtonClickCallback","newgradeitemcategorytotalrowhtml","gradeitemcategorytotalrowhtml","newgradeitemcategorytotalrow","value","this","enableModal","editcontent","addDashboardModalClasses","backgroundmodal","createElement","setAttribute","appendChild","addDashboardBackdropModal","disableModal","removeDashboardModalClasses","footer","removeChild","removeDashboardBackdropModal","dragged","target","draggingchilds","dropactionredirectinprogress","dragstart","event","setTimeout","className","under","itemtype","array","Array","from","push","dragend","dragover","preventDefault","closest","dragleave","drop","move","istotal","window","location","href","removeGradeitemCategory","gradeitemcategoryrow","parentgradecategorydepth","currentrow","nextElementSibling","gradeDashboardOnChangeCallback","length","targetNode","MutationObserver","mutationList","mutation","type","observe","attributes","childList","subtree","e","targetrow","focus","actiongradeitemid","disableGradeitem","textContent","includes","disableGradeitemCategory","courseid","urlformulacreator","wwwroot","actionurl","forEach"],"mappings":"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"}
