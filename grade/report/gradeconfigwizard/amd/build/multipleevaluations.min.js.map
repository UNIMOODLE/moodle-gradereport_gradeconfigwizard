{"version":3,"file":"multipleevaluations.min.js","sources":["../src/multipleevaluations.js"],"sourcesContent":["import $ from 'jquery';\n\n/* START: VARIABLES */\n\nlet multipleevaluationtable = document.getElementById('multipleevaluation-table');\nlet multipleevaluationtablebody = multipleevaluationtable.getElementsByTagName('tbody')[0];\n\nlet addcategorybtn = document.getElementById('multipleevaluations-category-create-btn');\n\nlet gradeitemsmodal = document.querySelector('#available-gradeitems-modal-id');\nlet gradeitemsmodalacceptbutton = gradeitemsmodal.querySelector('.confirm');\n\n/* END: VARIABLES */\n\n/* START: TEMPLATES */\n\nconst removeitemiconhtml = (randomid) => `\n<i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" data-randomid=\"${randomid}\" \ntitle=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n`;\n\nconst categoryNameInput = (randomid, categoryname) => `\n${categoryname}\n<input name=\"categories[${randomid}][name]\" type=\"hidden\" value=\"${categoryname}\"/>\n`;\n\nconst newcategoryextracellshtml = (randomid) => `\n<td class=\"weight-1\" rowspan=\"2\">\n  <input type=\"number\" name=\"categories[${randomid}][weight]\" size=\"2\" value=\"1\">\n</td>\n<td class=\"min-grade-1\" rowspan=\"2\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <input type=\"checkbox\" class=\"mr-2\" id=\"myCheckbox\" disabled>\n      <input type=\"number\" name=\"categories[${randomid}][recitem][recitemgrade]\" size=\"2\" disabled>\n    </div>\n  </td>\n  </div>\n<td class=\"resit-1 add-btn\" rowspan=\"2\">\n  <button type=\"button\"\n    class=\"add-resit-items-btn btn btn-secondary\"\n    data-toggle=\"modal\"\n    data-target=\"#available-gradeitems-modal-id\"\n    data-gradeitemaddtarget=\"categoryresititem\"\n    data-addgradeitemdepth=\"1\" disabled>\n      Añadir elemento\n  </button>\n</td>\n`;\n\nconst addcategoryelementsbuttonrowhtml = (randomid) => `\n<tr data-randomid=\"${randomid}\" data-rowtype=\"categorygradeitemaddbtn\" data-depthlevel=\"2\">\n  <td class=\"item\">\n    <button type=\"button\"\n      data-toggle=\"modal\"\n      data-target=\"#available-gradeitems-modal-id\"\n      data-gradeitemaddtarget=\"gradeitem\"\n      data-addgradeitemdepth=\"2\"\n      class=\"add-category-items-btn btn btn-secondary\">\n        Añadir elementos\n    </button>\n  </td>\n  <td class=\"weight-2\"></td>\n  <td class=\"min-grade-2\"></td>\n  <td class=\"resit-2\"></td>\n</tr>\n`;\n\nconst categorygradeitemrowhtml = (randomid, gradeitemid, gradeitemname) => `\n<tr data-randomid=\"${randomid}\" data-rowtype=\"categorygradeitem\" data-gradeitemid=\"${gradeitemid}\" data-depthlevel=\"2\">\n  <td class=\"item\"\n    data-gradeitemid=\"${gradeitemid}\"\n    data-gradeitemname=\"${gradeitemname}\"\n    >\n      ${gradeitemname}\n      <input name=\"categories[${randomid}][items][${gradeitemid}][id]\" type=\"hidden\" value=\"${gradeitemid}\" />\n      <i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" data-randomid=\"${randomid}\" data-gradeitemid=\"${gradeitemid}\" \n      title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n  </td>\n  <td class=\"weight-2\">\n    <input type=\"number\" name=\"categories[${randomid}][items][${gradeitemid}][weight]\" size=\"2\" value=\"1\" />\n  </td>\n  <td class=\"min-grade-2\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <input type=\"checkbox\" class=\"mr-2\">\n        <input name=\"categories[${randomid}][items][${gradeitemid}][recitem][recitemgrade]\" type=\"number\" size=\"2\" disabled>\n      </div>\n    </div>\n  </td>\n  <td class=\"resit-2\" data-gradeitemid=\"${gradeitemid}\">\n    <button type=\"button\"\n      class=\"add-grade-item-resit-items-btn btn btn-secondary\"\n      data-gradeitemaddtarget=\"gradeitemresititem\"\n      data-toggle=\"modal\"\n      data-target=\"#available-gradeitems-modal-id\"\n      disabled>\n        Añadir elemento\n    </button>\n  </td>\n</tr>\n`;\n\nconst categoryresitgradeitemcellhtml = (randomid, gradeitemid, gradeitemname, rowspan) => `\n<td class=\"resit-1\" rowspan=\"${rowspan}\" data-gradeitemid=\"${gradeitemid}\" data-gradeitemname=\"${gradeitemname}\">\n  ${gradeitemname}\n  <input name=\"categories[${randomid}][recitem][recitemid]\" type=\"hidden\" value=\"${gradeitemid}\"/>\n  <i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n</td>\n`;\n\nconst categorygradeitemresitgradeitemcellhtml = (randomid, gradeitemid, gradeitemname, parentgradeitemid) => `\n<td class=\"resit-2\" data-gradeitemid=\"${gradeitemid}\" data-gradeitemname=\"${gradeitemname}\">\n  ${gradeitemname}\n  <input name=\"categories[${randomid}][items][${parentgradeitemid}][recitem][recitemid]\" type=\"hidden\" value=\"${gradeitemid}\" />\n  <i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n</td>\n`;\n\nconst addcategoryresitbuttoncellenabledhtml = (randomid) => `\n<td class=\"resit-1 add-btn\" rowspan=\"2\" id=\"categoryresitbutton-${randomid}\">\n  <button type=\"button\"\n    class=\"add-resit-items-btn btn btn-secondary\"\n    data-toggle=\"modal\"\n    data-target=\"#available-gradeitems-modal-id\"\n    data-gradeitemaddtarget=\"categoryresititem\"\n    data-addgradeitemdepth=\"1\">\n      Añadir elemento\n  </button>\n</td>\n`;\n\nconst addcategorygradeitemresitgradeitembuttoncellenabledhtml = (gradeitemid) => `\n<td class=\"resit-2 add-btn\" data-gradeitemid=\"${gradeitemid}\">\n  <button type=\"button\"\n    class=\"add-grade-item-resit-items-btn btn btn-secondary\"\n    data-gradeitemaddtarget=\"gradeitemresititem\"\n    data-toggle=\"modal\"\n    data-target=\"#available-gradeitems-modal-id\">\n      Añadir elemento\n  </button>\n</td>\n`;\n\n/* END: TEMPLATES */\n\n/* START: FUNCTIONS */\n\nconst generateUniqueId = () => {\n    let randomid = null;\n    while (randomid === null || document.getElementById(randomid) !== null) {\n        // generate a 8 chars long random id\n        randomid = Math.random().toString(36).substring(2, 10);\n    }\n    return randomid;\n};\n\nconst getGradeitemsmodalSelectedItems = () => {\n    let gradeitems = gradeitemsmodal.querySelectorAll('input[type=\"checkbox\"]:checked:not(.d-none)');\n    return gradeitems;\n};\n\nconst removeGradeitemsmodalItems = (gradeitems) => {\n    gradeitems.forEach((gradeitem) => {\n        gradeitem.closest('div').classList.add('d-none');\n        gradeitem.checked = false;\n    });\n};\n\nconst addGradeitemsmodalItem = (gradeitemid) => {\n    let gradeitem = gradeitemsmodal.querySelector('[data-id=\"' + gradeitemid + '\"]');\n    gradeitem.closest('div').classList.remove('d-none');\n    gradeitem.checked = false;\n};\n\nconst recalculateRowspans = (randomid) => {\n    let categoryCount = 1;\n    let categoryGradeItemAddBtnCount = multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitemaddbtn\"]'\n    ).length;\n    let categoryGradeItemCount = multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"]'\n    ).length;\n    var totalItemCount = categoryGradeItemAddBtnCount + categoryGradeItemCount + categoryCount;\n    multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td'\n    ).forEach(datacell => {\n        datacell.rowSpan = totalItemCount;\n    });\n};\n\nconst addCategory = (categoryname) => {\n    let randomid = generateUniqueId();\n\n    let newcategoryrow = document.createElement('tr');\n    newcategoryrow.id = randomid;\n    newcategoryrow.dataset.randomid = randomid;\n    newcategoryrow.dataset.depthlevel = 1;\n    newcategoryrow.dataset.rowtype = \"category\";\n\n    let newcategorycell = document.createElement('td');\n    newcategorycell.classList.add('category');\n    newcategorycell.rowSpan = 2;\n    newcategorycell.innerHTML = categoryNameInput(randomid, categoryname) + removeitemiconhtml(randomid); //not needed\n\n    newcategoryrow.appendChild(newcategorycell);\n    newcategoryrow.innerHTML += newcategoryextracellshtml(randomid);\n\n    multipleevaluationtablebody.appendChild(newcategoryrow);\n\n    newcategoryrow.insertAdjacentHTML('afterend', addcategoryelementsbuttonrowhtml(randomid));\n\n    let removeitemicon = newcategoryrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeCategoryCallback);\n\n    let categorymingradecheckbox = newcategoryrow.querySelector('.min-grade-1 input[type=\"checkbox\"]');\n    categorymingradecheckbox.addEventListener('change', categoryMinGradeCheckboxChangeCallback);\n\n    let categorymingradetext = newcategoryrow.querySelector('.min-grade-1 input[type=\"number\"]');\n    categorymingradetext.addEventListener('input', categoryMinGradeTextChangeCallback);\n};\n\nconst removeCategory = (randomid) => {\n    removeCategoryResititem(randomid);\n\n    let catgorygradeitemrowstodelete = multipleevaluationtablebody.querySelectorAll(\n        'tr[data-rowtype=\"categorygradeitem\"][data-randomid=\"' + randomid + '\"]'\n    );\n    catgorygradeitemrowstodelete.forEach(catgorygradeitemrow => {\n        let randomid = catgorygradeitemrow.dataset['randomid'];\n        let gradeitemid = catgorygradeitemrow.dataset['gradeitemid'];\n        removeCategoryGradeitem(randomid, gradeitemid);\n    });\n\n    let categoryrowstodelete = multipleevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"]');\n    categoryrowstodelete.forEach(row => row.remove());\n};\n\nconst addCategoryGradeitems = (randomid, gradeitems) => {\n    gradeitems.forEach(gradeitem => {\n        addCategoryGradeitem(randomid, gradeitem);\n    });\n};\n\nconst addCategoryGradeitem = (randomid, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n    let categorygradeitemaddbtn = multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitemaddbtn\"]'\n    );\n    categorygradeitemaddbtn[0].insertAdjacentHTML('beforebegin', categorygradeitemrowhtml(randomid, gradeitemid, gradeitemname));\n\n    let newcategorygradeitemrow = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"][data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n\n    let removeitemicon = newcategorygradeitemrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeCategoryGradeItemCallback);\n\n    let categorygradeitemmingradecheckbox = newcategorygradeitemrow.querySelector('.min-grade-2 input[type=\"checkbox\"]');\n    categorygradeitemmingradecheckbox.addEventListener('change', categoryGradeitemMinGradeCheckboxChangeCallback);\n\n    let categorygradeitemmingradetext = newcategorygradeitemrow.querySelector('.min-grade-2 input[type=\"number\"]');\n    categorygradeitemmingradetext.addEventListener('input', categoryGradeitemMinGradeTextChangeCallback);\n\n    let categorymingradecheckbox = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] .min-grade-1 input[type=\"checkbox\"]'\n    );\n    categorymingradecheckbox.disabled = false;\n\n    recalculateRowspans(randomid);\n};\n\nconst removeCategoryGradeitem = (randomid, gradeitemid) => {\n    let rowtodelete = multipleevaluationtablebody.querySelectorAll(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"][data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    rowtodelete.forEach(row => {\n        row.querySelectorAll('[data-gradeitemid]').forEach(row => addGradeitemsmodalItem(row.dataset['gradeitemid']));\n        row.remove();\n    });\n\n    let categorygradeitems = multipleevaluationtablebody.querySelectorAll(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"]'\n    );\n    let categorymingradecheckbox = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] .min-grade-1 input[type=\"checkbox\"]'\n    );\n    if (categorygradeitems.length > 0) {\n        categorymingradecheckbox.disabled = false;\n    } else {\n        categorymingradecheckbox.disabled = true;\n    }\n\n    addGradeitemsmodalItem(gradeitemid);\n    recalculateRowspans(randomid);\n};\n\nconst addCategoryresititem = (randomid, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n    let categoryresitcell = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td.resit-1'\n    );\n    let rowspan = categoryresitcell.getAttribute('rowspan');\n\n    let categoryresitgradeitemaddbtn = multipleevaluationtablebody.querySelector(\n        '[data-randomid=\"' + randomid + '\"] td.resit-1 .add-resit-items-btn'\n    );\n    let categoryresitgradeitemcell = categoryresitgradeitemaddbtn.closest('td');\n    categoryresitgradeitemcell.insertAdjacentHTML('beforebegin',\n        categoryresitgradeitemcellhtml(randomid, gradeitemid, gradeitemname, rowspan))\n    ;\n    categoryresitgradeitemcell.remove();\n\n    let newcategoryresitgradeitem = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td.resit-1[data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    newcategoryresitgradeitem.querySelector('.remove-item-icon').addEventListener('click', removeCategoryResitGradeitemCallback);\n};\n\nconst removeCategoryResititem = (randomid, gradeitemid = null) => {\n    let categoryresitgradeitem = null;\n    if (gradeitemid === null) {\n        categoryresitgradeitem = multipleevaluationtablebody.querySelector('tr[data-randomid=\"' + randomid + '\"] td.resit-1');\n        gradeitemid = categoryresitgradeitem.dataset['gradeitemid'];\n    } else {\n        categoryresitgradeitem = multipleevaluationtablebody.querySelector(\n            'tr[data-randomid=\"' + randomid + '\"] td.resit-1[data-gradeitemid=\"' + gradeitemid + '\"]'\n        );\n    }\n    let categoryresitgradeitemcell = categoryresitgradeitem.closest('td');\n    categoryresitgradeitemcell.insertAdjacentHTML('afterend', addcategoryresitbuttoncellenabledhtml(randomid));\n    categoryresitgradeitemcell.remove();\n\n    if (gradeitemid !== undefined) {\n        addGradeitemsmodalItem(gradeitemid);\n    }\n    recalculateRowspans(randomid);\n};\n\nconst disableAddCategoryResititmeBtn = (randomid) => {\n    let addcategoryresititmebtn = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] td.resit-1.add-btn button'\n    );\n    if (addcategoryresititmebtn) {\n        addcategoryresititmebtn.disabled = true;\n    }\n};\n\nconst addCategoryGradeitemResititem = (randomid, parentgradeitem, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n\n    let categorygradeitemresitgradeitemaddbtn = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] td[data-gradeitemid=\"' +\n        parentgradeitem + '\"] ~ td.resit-2 .add-grade-item-resit-items-btn'\n    );\n    let categorygradeitemresitgradeitemcell = categorygradeitemresitgradeitemaddbtn.closest('td');\n    categorygradeitemresitgradeitemcell.insertAdjacentHTML('beforebegin',\n        categorygradeitemresitgradeitemcellhtml(randomid, gradeitemid, gradeitemname, parentgradeitem));\n    categorygradeitemresitgradeitemcell.remove();\n\n    let newcategorygradeitemresitgradeitem = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"] td.resit-2[data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    newcategorygradeitemresitgradeitem.querySelector('.remove-item-icon')\n        .addEventListener('click', removeCategoryGradeitemResitGradeitemCallback);\n};\n\nconst removeCategoryGradeitemResititem = (randomid, parentgradeitemid, gradeitemid) => {\n    let categoryresitgradeitemcell = multipleevaluationtablebody.querySelector(\n        'td.resit-2[data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    categoryresitgradeitemcell.insertAdjacentHTML('afterend',\n        addcategorygradeitemresitgradeitembuttoncellenabledhtml(parentgradeitemid));\n    categoryresitgradeitemcell.remove();\n\n    //TODO: esto está hecho porque hasta que no se define un item de recuperación,\n    // el botón para añadir uno tiene el id del itemgrade al que irá asociado\n    if (parentgradeitemid != gradeitemid) {\n        addGradeitemsmodalItem(gradeitemid);\n    }\n    recalculateRowspans(randomid);\n};\n\nconst disableAddCategoryGradeitemResititemBtn = (randomid) => {\n    let addcategorygradeitemresititembtn = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] td.resit-2.add-btn button.add-grade-item-resit-items-btn'\n    );\n    if (addcategorygradeitemresititembtn) {\n        addcategorygradeitemresititembtn.disabled = true;\n    }\n};\n\n/* END: FUNCTIONS */\n\n/* START: CALLBACKS */\n\nconst addCategoryButtonClickCallback = () => {\n    let categorynameinput = document.getElementById('multipleevaluations-category-create-name');\n    categorynameinput.value = categorynameinput.value.trim();\n    let categoryname = categorynameinput.value;\n    if (categoryname === '') {\n        return;\n    }\n    addCategory(categoryname);\n    categorynameinput.value = '';\n};\n\nconst removeCategoryCallback = (event) => {\n    let randomid = event.target.dataset.randomid;\n    removeCategory(randomid);\n};\n\nconst removeCategoryGradeItemCallback = (event) => {\n    let randomid = event.target.dataset.randomid;\n    let gradeitemid = event.target.dataset.gradeitemid;\n    removeCategoryGradeitem(randomid, gradeitemid);\n};\n\nconst removeCategoryResitGradeitemCallback = (event) => {\n    let parenttd = event.target.closest('td');\n    let parenttr = parenttd.closest('tr');\n    let randomid = parenttr.dataset['randomid'];\n    let gradeitemid = parenttd.dataset['gradeitemid'];\n    removeCategoryResititem(randomid, gradeitemid);\n};\n\nconst removeCategoryGradeitemResitGradeitemCallback = (event) => {\n    let parenttd = event.target.closest('td');\n    let parenttr = parenttd.closest('tr');\n    let randomid = parenttr.dataset['randomid'];\n    let gradeitemid = parenttd.dataset['gradeitemid'];\n    let parentgradeitemid = parenttr.querySelector('td.item').dataset['gradeitemid'];\n    removeCategoryGradeitemResititem(randomid, parentgradeitemid, gradeitemid);\n};\n\nconst availableGradeItemsModalShowCallback = (event) => {\n    let button = event.relatedTarget;\n    let callerrandomid = button.closest('tr').dataset['randomid'];\n    let gradeitemaddtarget = button.dataset['gradeitemaddtarget'];\n    let addgradeitemdepth = button.dataset['addgradeitemdepth'];\n    let gradeitemid = button.closest('td').dataset['gradeitemid'];\n\n    gradeitemsmodal.dataset['gradeitemaddtarget'] = gradeitemaddtarget;\n    gradeitemsmodal.dataset['addgradeitemdepth'] = addgradeitemdepth;\n    gradeitemsmodal.dataset['callerrandomid'] = callerrandomid;\n    gradeitemsmodal.dataset['gradeitemid'] = gradeitemid;\n};\n\nconst availableGradeItemsModalConfirmCallback = () => {\n    let gradeitemaddtarget = gradeitemsmodal.dataset['gradeitemaddtarget'];\n    let gradeitemid = gradeitemsmodal.dataset['gradeitemid'];\n\n    let randomid = gradeitemsmodal.dataset['callerrandomid'];\n    let gradeitems = getGradeitemsmodalSelectedItems();\n\n    switch (gradeitemaddtarget) {\n        case 'gradeitem':\n            addCategoryGradeitems(randomid, gradeitems);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n        case 'categoryresititem':\n            if (gradeitems.length > 1) {\n                alert('Selecciona solo 1 gradeitem');\n                break;\n            }\n            addCategoryresititem(randomid, gradeitems[0]);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n        case 'gradeitemresititem':\n            if (gradeitems.length > 1) {\n                alert('Selecciona solo 1 gradeitem');\n                break;\n            }\n            addCategoryGradeitemResititem(randomid, gradeitemid, gradeitems[0]);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n    }\n};\n\nconst categoryMinGradeCheckboxChangeCallback = (event) => {\n    let categorymingradecheckbox = event.target;\n    let categorymingradecheckboxrow = categorymingradecheckbox.closest('tr');\n    let randomid = categorymingradecheckboxrow.dataset['randomid'];\n\n    let categoryresititemid = categorymingradecheckboxrow.querySelector('.resit-1').dataset['gradeitemid'];\n    if (categoryresititemid) {\n        removeCategoryResititem(randomid, categoryresititemid);\n        disableAddCategoryResititmeBtn(randomid);\n    }\n\n    let categorymingradeinput = categorymingradecheckboxrow.querySelector('.min-grade-1 input[type=\"number\"]');\n    if (categorymingradecheckbox.checked) {\n        categorymingradeinput.disabled = false;\n    } else {\n        categorymingradeinput.disabled = true;\n        categorymingradeinput.value = '';\n    }\n};\n\nconst categoryGradeitemMinGradeCheckboxChangeCallback = (event) => {\n    let categorymingradecheckbox = event.target;\n    let categorygradeitemchangedrow = categorymingradecheckbox.closest('tr');\n    let randomid = categorygradeitemchangedrow.dataset['randomid'];\n\n    let parentgradeitemid = categorygradeitemchangedrow.querySelector('td.item').dataset['gradeitemid'];\n    let resitgradeitemid = categorygradeitemchangedrow.querySelector('td.resit-2').dataset['gradeitemid'];\n    if (resitgradeitemid !== null && parentgradeitemid !== null) {\n        removeCategoryGradeitemResititem(randomid, parentgradeitemid, resitgradeitemid);\n        disableAddCategoryGradeitemResititemBtn(randomid);\n    }\n\n    let categorymingradeinput = categorygradeitemchangedrow.querySelector('.min-grade-2 input[type=\"number\"]');\n\n    if (categorymingradecheckbox.checked) {\n        categorymingradeinput.disabled = false;\n    } else {\n        categorymingradeinput.disabled = true;\n        categorymingradeinput.value = '';\n    }\n};\n\nconst categoryMinGradeTextChangeCallback = (event) => {\n    let mingradetextfield = event.target;\n    let mingradetextfieldrow = mingradetextfield.closest('tr');\n\n    let addCategoryGradeitemResititemBtn = mingradetextfieldrow.querySelector('.resit-1 button');\n\n    if (mingradetextfield.value.trim() === '') {\n        addCategoryGradeitemResititemBtn.disabled = true;\n    } else {\n        addCategoryGradeitemResititemBtn.disabled = false;\n    }\n};\n\nconst categoryGradeitemMinGradeTextChangeCallback = (event) => {\n    let mingradetextfield = event.target;\n    let mingradetextfieldrow = mingradetextfield.closest('tr');\n\n    let addCategoryGradeitemResititemBtn = mingradetextfieldrow.querySelector('.resit-2 button');\n\n    if (mingradetextfield.value.trim() === '') {\n        addCategoryGradeitemResititemBtn.disabled = true;\n    } else {\n        addCategoryGradeitemResititemBtn.disabled = false;\n    }\n};\n\n/* END: CALLBACKS */\n\n/* START: EVENT LISTENERS DECLARATION */\n\nexport const init = () => {\n    addcategorybtn.addEventListener('click', addCategoryButtonClickCallback);\n    $(gradeitemsmodal).on('show.bs.modal', availableGradeItemsModalShowCallback);\n    gradeitemsmodalacceptbutton.addEventListener('click', availableGradeItemsModalConfirmCallback);\n};\n\n/* END: EVENT LISTENERS DECLARATION */"],"names":["obj","_jquery","__esModule","default","multipleevaluationtablebody","document","getElementById","getElementsByTagName","addcategorybtn","gradeitemsmodal","querySelector","gradeitemsmodalacceptbutton","removeGradeitemsmodalItems","gradeitems","forEach","gradeitem","closest","classList","add","checked","addGradeitemsmodalItem","gradeitemid","remove","recalculateRowspans","randomid","totalItemCount","querySelectorAll","length","datacell","rowSpan","addCategory","categoryname","generateUniqueId","Math","random","toString","substring","newcategoryrow","createElement","id","dataset","depthlevel","rowtype","newcategorycell","innerHTML","categoryNameInput","concat","removeitemiconhtml","appendChild","newcategoryextracellshtml","insertAdjacentHTML","addcategoryelementsbuttonrowhtml","addEventListener","removeCategoryCallback","categoryMinGradeCheckboxChangeCallback","categoryMinGradeTextChangeCallback","addCategoryGradeitem","gradeitemname","categorygradeitemrowhtml","newcategorygradeitemrow","removeCategoryGradeItemCallback","categoryGradeitemMinGradeCheckboxChangeCallback","categoryGradeitemMinGradeTextChangeCallback","disabled","removeCategoryGradeitem","row","categorygradeitems","categorymingradecheckbox","removeCategoryResititem","arguments","undefined","categoryresitgradeitem","categoryresitgradeitemcell","addcategoryresitbuttoncellenabledhtml","removeCategoryGradeitemResititem","parentgradeitemid","addcategorygradeitemresitgradeitembuttoncellenabledhtml","addCategoryButtonClickCallback","categorynameinput","value","trim","event","catgorygradeitemrow","removeCategory","target","removeCategoryResitGradeitemCallback","parenttd","removeCategoryGradeitemResitGradeitemCallback","parenttr","availableGradeItemsModalShowCallback","button","relatedTarget","callerrandomid","gradeitemaddtarget","addgradeitemdepth","availableGradeItemsModalConfirmCallback","addCategoryGradeitems","$","modal","alert","addCategoryresititem","rowspan","getAttribute","categoryresitgradeitemcellhtml","addCategoryGradeitemResititem","parentgradeitem","categorygradeitemresitgradeitemcell","categorygradeitemresitgradeitemcellhtml","categorymingradecheckboxrow","categoryresititemid","addcategoryresititmebtn","disableAddCategoryResititmeBtn","categorymingradeinput","categorygradeitemchangedrow","resitgradeitemid","addcategorygradeitemresititembtn","disableAddCategoryGradeitemResititemBtn","mingradetextfield","addCategoryGradeitemResititemBtn","_exports","init","on"],"mappings":"4GAAuB,IAAAA,iFAAvBC,SAAuBD,IAAvBC,UAAuBD,IAAAE,WAAAF,IAAAG,CAAAA,QAAAH,KAIvB,IACII,4BAD0BC,SAASC,eAAe,4BACIC,qBAAqB,SAAS,GAEpFC,eAAiBH,SAASC,eAAe,2CAEzCG,gBAAkBJ,SAASK,cAAc,kCACzCC,4BAA8BF,gBAAgBC,cAAc,YAMhE,MAkJME,2BAA8BC,aAChCA,WAAWC,SAASC,YAChBA,UAAUC,QAAQ,OAAOC,UAAUC,IAAI,UACvCH,UAAUI,SAAU,CAAK,GAC3B,EAGAC,uBAA0BC,cAC5B,IAAIN,UAAYN,gBAAgBC,cAAc,aAAeW,YAAc,MAC3EN,UAAUC,QAAQ,OAAOC,UAAUK,OAAO,UAC1CP,UAAUI,SAAU,CAAK,EAGvBI,oBAAuBC,WAQzB,IAAIC,eAN+BrB,4BAA4BsB,iBAC3D,mBAAqBF,SAAW,8CAClCG,OAC2BvB,4BAA4BsB,iBACrD,mBAAqBF,SAAW,wCAClCG,OANkB,EAQpBvB,4BAA4BsB,iBACxB,mBAAqBF,SAAW,kCAClCV,SAAQc,WACNA,SAASC,QAAUJ,cAAc,GACnC,EAGAK,YAAeC,eACjB,IAAIP,SA5CiBQ,MACrB,IAAIR,SAAW,KACf,KAAoB,OAAbA,UAA2D,OAAtCnB,SAASC,eAAekB,WAEhDA,SAAWS,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAEvD,OAAOZ,QAAQ,EAsCAQ,GAEXK,eAAiBhC,SAASiC,cAAc,MAC5CD,eAAeE,GAAKf,SACpBa,eAAeG,QAAQhB,SAAWA,SAClCa,eAAeG,QAAQC,WAAa,EACpCJ,eAAeG,QAAQE,QAAU,WAEjC,IAAIC,gBAAkBtC,SAASiC,cAAc,MAC7CK,gBAAgB1B,UAAUC,IAAI,YAC9ByB,gBAAgBd,QAAU,EAC1Bc,gBAAgBC,UAtLMC,EAACrB,SAAUO,oBAAYe,OAC/Cf,aAAY,8BAAAe,OACYtB,2CAAQsB,OAAiCf,aAClE,SAmL+Bc,CAAkBrB,SAAUO,cA3LhCP,oFAAQsB,OACkCtB,SAErE,4EAwL2EuB,CAAmBvB,UAE3Fa,eAAeW,YAAYL,iBAC3BN,eAAeO,WApLgBpB,WAAQsB,gFAAAA,OAEDtB,SAAQsB,oPAAAA,OAMJtB,SAc7C,wZA8J+ByB,CAA0BzB,UAEtDpB,4BAA4B4C,YAAYX,gBAExCA,eAAea,mBAAmB,WAhKI1B,mCAAQsB,OAC7BtB,SAepB,6dAgJiD2B,CAAiC3B,WAE1Da,eAAe3B,cAAc,qBACnC0C,iBAAiB,QAASC,wBAEVhB,eAAe3B,cAAc,uCACnC0C,iBAAiB,SAAUE,wCAEzBjB,eAAe3B,cAAc,qCACnC0C,iBAAiB,QAASG,mCAAmC,EAyBhFC,qBAAuBA,CAAChC,SAAUT,aACpC,IAAIM,YAAcN,UAAUyB,QAAY,GACpCiB,cAAgB1C,UAAUyB,QAAqB,YACrBpC,4BAA4BsB,iBACtD,mBAAqBF,SAAW,8CAEZ,GAAG0B,mBAAmB,cAtLjBQ,EAAClC,SAAUH,YAAaoC,gBAAa,wBAAAX,OACjDtB,SAAQ,yDAAAsB,OAAwDzB,YAAWyB,sEAAAA,OAExEzB,YAAWyB,+BAAAA,OACTW,cAAa,oBAAAX,OAE/BW,cAAa,oCAAAX,OACWtB,SAAQsB,aAAAA,OAAYzB,YAAWyB,gCAAAA,OAA+BzB,gGAAWyB,OAC7BtB,SAAQ,wBAAAsB,OAAuBzB,YAAW,8JAAAyB,OAI1EtB,SAAQsB,aAAAA,OAAYzB,YAAWyB,+MAAAA,OAMzCtB,SAAQ,aAAAsB,OAAYzB,YAAW,2IAAAyB,OAIvBzB,YAWzC,+SAqJgEqC,CAAyBlC,SAAUH,YAAaoC,gBAE7G,IAAIE,wBAA0BvD,4BAA4BM,cACtD,qBAAuBc,SAAW,0DAA4DH,YAAc,MAG3FsC,wBAAwBjD,cAAc,qBAC5C0C,iBAAiB,QAASQ,iCAEDD,wBAAwBjD,cAAc,uCAC5C0C,iBAAiB,SAAUS,iDAEzBF,wBAAwBjD,cAAc,qCAC5C0C,iBAAiB,QAASU,6CAEzB1D,4BAA4BM,cACvD,qBAAuBc,SAAW,mEAEbuC,UAAW,EAEpCxC,oBAAoBC,SAAS,EAG3BwC,wBAA0BA,CAACxC,SAAUH,eACrBjB,4BAA4BsB,iBAC1C,qBAAuBF,SAAW,0DAA4DH,YAAc,MAEpGP,SAAQmD,MAChBA,IAAIvC,iBAAiB,sBAAsBZ,SAAQmD,KAAO7C,uBAAuB6C,IAAIzB,QAAqB,eAC1GyB,IAAI3C,QAAQ,IAGhB,IAAI4C,mBAAqB9D,4BAA4BsB,iBACjD,qBAAuBF,SAAW,wCAElC2C,yBAA2B/D,4BAA4BM,cACvD,qBAAuBc,SAAW,mEAElC0C,mBAAmBvC,OAAS,EAC5BwC,yBAAyBJ,UAAW,EAEpCI,yBAAyBJ,UAAW,EAGxC3C,uBAAuBC,aACvBE,oBAAoBC,SAAS,EA0B3B4C,wBAA0B,SAAC5C,UAAiC,IAAvBH,YAAWgD,UAAA1C,OAAA,QAAA2C,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACjDE,uBAAyB,KACT,OAAhBlD,aACAkD,uBAAyBnE,4BAA4BM,cAAc,qBAAuBc,SAAW,iBACrGH,YAAckD,uBAAuB/B,QAAqB,aAE1D+B,uBAAyBnE,4BAA4BM,cACjD,qBAAuBc,SAAW,mCAAqCH,YAAc,MAG7F,IAAImD,2BAA6BD,uBAAuBvD,QAAQ,MAChEwD,2BAA2BtB,mBAAmB,WArNH1B,gFAAQsB,OACWtB,SAUjE,4RA0M6DiD,CAAsCjD,WAChGgD,2BAA2BlD,cAEPgD,IAAhBjD,aACAD,uBAAuBC,aAE3BE,oBAAoBC,WAgClBkD,iCAAmCA,CAAClD,SAAUmD,kBAAmBtD,eACnE,IAAImD,2BAA6BpE,4BAA4BM,cACzD,gCAAkCW,YAAc,MAEpDmD,2BAA2BtB,mBAAmB,WAlPe7B,iEAAWyB,OAC5BzB,YAS/C,wQAyOOuD,CAAwDD,oBAC5DH,2BAA2BlD,SAIvBqD,mBAAqBtD,aACrBD,uBAAuBC,aAE3BE,oBAAoBC,SAAS,EAgB3BqD,+BAAiCA,KACnC,IAAIC,kBAAoBzE,SAASC,eAAe,4CAChDwE,kBAAkBC,MAAQD,kBAAkBC,MAAMC,OAClD,IAAIjD,aAAe+C,kBAAkBC,MAChB,KAAjBhD,eAGJD,YAAYC,cACZ+C,kBAAkBC,MAAQ,GAAE,EAG1B1B,uBAA0B4B,QA5LRzD,YACpB4C,wBAAwB5C,UAEWpB,4BAA4BsB,iBAC3D,uDAAyDF,SAAW,MAE3CV,SAAQoE,sBACjC,IAAI1D,SAAW0D,oBAAoB1C,QAAkB,SACjDnB,YAAc6D,oBAAoB1C,QAAqB,YAC3DwB,wBAAwBxC,SAAUH,YAAY,IAGvBjB,4BAA4BsB,iBAAiB,qBAAuBF,SAAW,MACrFV,SAAQmD,KAAOA,IAAI3C,UAAS,EAiLjD6D,CADeF,MAAMG,OAAO5C,QAAQhB,SACZ,EAGtBoC,gCAAmCqB,QACrC,IAAIzD,SAAWyD,MAAMG,OAAO5C,QAAQhB,SAChCH,YAAc4D,MAAMG,OAAO5C,QAAQnB,YACvC2C,wBAAwBxC,SAAUH,YAAY,EAG5CgE,qCAAwCJ,QAC1C,IAAIK,SAAWL,MAAMG,OAAOpE,QAAQ,MAEhCQ,SADW8D,SAAStE,QAAQ,MACRwB,QAAkB,SACtCnB,YAAciE,SAAS9C,QAAqB,YAChD4B,wBAAwB5C,SAAUH,YAAY,EAG5CkE,8CAAiDN,QACnD,IAAIK,SAAWL,MAAMG,OAAOpE,QAAQ,MAChCwE,SAAWF,SAAStE,QAAQ,MAC5BQ,SAAWgE,SAAShD,QAAkB,SACtCnB,YAAciE,SAAS9C,QAAqB,YAC5CmC,kBAAoBa,SAAS9E,cAAc,WAAW8B,QAAqB,YAC/EkC,iCAAiClD,SAAUmD,kBAAmBtD,YAAY,EAGxEoE,qCAAwCR,QAC1C,IAAIS,OAAST,MAAMU,cACfC,eAAiBF,OAAO1E,QAAQ,MAAMwB,QAAkB,SACxDqD,mBAAqBH,OAAOlD,QAA4B,mBACxDsD,kBAAoBJ,OAAOlD,QAA2B,kBACtDnB,YAAcqE,OAAO1E,QAAQ,MAAMwB,QAAqB,YAE5D/B,gBAAgB+B,QAA4B,mBAAIqD,mBAChDpF,gBAAgB+B,QAA2B,kBAAIsD,kBAC/CrF,gBAAgB+B,QAAwB,eAAIoD,eAC5CnF,gBAAgB+B,QAAqB,YAAInB,WAAW,EAGlD0E,wCAA0CA,KAC5C,IAAIF,mBAAqBpF,gBAAgB+B,QAA4B,mBACjEnB,YAAcZ,gBAAgB+B,QAAqB,YAEnDhB,SAAWf,gBAAgB+B,QAAwB,eACnD3B,WA1SaJ,gBAAgBiB,iBAAiB,+CA4SlD,OAAQmE,oBACJ,IAAK,YA7NiBG,EAACxE,SAAUX,cACrCA,WAAWC,SAAQC,YACfyC,qBAAqBhC,SAAUT,UAAU,GAC3C,EA2NMiF,CAAsBxE,SAAUX,YAChCD,2BAA2BC,aAC3B,EAAAoF,QAAAA,SAAExF,iBAAiByF,MAAM,QACzB,MACJ,IAAK,oBACD,GAAIrF,WAAWc,OAAS,EAAG,CACvBwE,MAAM,+BACN,KACJ,CA1KiBC,EAAC5E,SAAUT,aACpC,IAAIM,YAAcN,UAAUyB,QAAY,GACpCiB,cAAgB1C,UAAUyB,QAAqB,YAI/C6D,QAHoBjG,4BAA4BM,cAChD,qBAAuBc,SAAW,0CAEN8E,aAAa,WAKzC9B,2BAH+BpE,4BAA4BM,cAC3D,mBAAqBc,SAAW,sCAE0BR,QAAQ,MACtEwD,2BAA2BtB,mBAAmB,cA/MXqD,EAAC/E,SAAUH,YAAaoC,cAAe4C,UAAOvD,kCAAAA,OACtDuD,gCAAOvD,OAAuBzB,YAAW,0BAAAyB,OAAyBW,cAAa,UAAAX,OAC1GW,cAAaX,gCAAAA,OACWtB,SAAQ,gDAAAsB,OAA+CzB,YAGlF,2IA0MOkF,CAA+B/E,SAAUH,YAAaoC,cAAe4C,UAEzE7B,2BAA2BlD,SAEKlB,4BAA4BM,cACxD,qBAAuBc,SAAW,4DAA8DH,YAAc,MAExFX,cAAc,qBAAqB0C,iBAAiB,QAASiC,qCAAqC,EAuJpHe,CAAqB5E,SAAUX,WAAW,IAC1CD,2BAA2BC,aAC3B,EAAAoF,QAAAA,SAAExF,iBAAiByF,MAAM,QACzB,MACJ,IAAK,qBACD,GAAIrF,WAAWc,OAAS,EAAG,CACvBwE,MAAM,+BACN,KACJ,CA/H0BK,EAAChF,SAAUiF,gBAAiB1F,aAC9D,IAAIM,YAAcN,UAAUyB,QAAY,GACpCiB,cAAgB1C,UAAUyB,QAAqB,YAM/CkE,oCAJwCtG,4BAA4BM,cACpE,qBAAuBc,SAAW,2BAClCiF,gBAAkB,mDAE0DzF,QAAQ,MACxF0F,oCAAoCxD,mBAAmB,cAxPXyD,EAACnF,SAAUH,YAAaoC,cAAekB,oBAAiB7B,2CAAAA,OAChEzB,sCAAWyB,OAAyBW,cAAa,UAAAX,OACrFW,cAAa,gCAAAX,OACWtB,SAAQsB,aAAAA,OAAY6B,kBAAiB,gDAAA7B,OAA+CzB,YAG/G,4IAmPOsF,CAAwCnF,SAAUH,YAAaoC,cAAegD,kBAClFC,oCAAoCpF,SAEKlB,4BAA4BM,cACjE,qBAAuBc,SAAW,qEAAuEH,YAAc,MAExFX,cAAc,qBAC5C0C,iBAAiB,QAASmC,8CAA8C,EA+GrEiB,CAA8BhF,SAAUH,YAAaR,WAAW,IAChED,2BAA2BC,aAC3B,EAAAoF,QAAAA,SAAExF,iBAAiByF,MAAM,QAEjC,EAGE5C,uCAA0C2B,QAC5C,IAAId,yBAA2Bc,MAAMG,OACjCwB,4BAA8BzC,yBAAyBnD,QAAQ,MAC/DQ,SAAWoF,4BAA4BpE,QAAkB,SAEzDqE,oBAAsBD,4BAA4BlG,cAAc,YAAY8B,QAAqB,YACjGqE,sBACAzC,wBAAwB5C,SAAUqF,qBAvJFrF,YACpC,IAAIsF,wBAA0B1G,4BAA4BM,cACtD,qBAAuBc,SAAW,gCAElCsF,0BACAA,wBAAwB/C,UAAW,EACvC,EAkJIgD,CAA+BvF,WAGnC,IAAIwF,sBAAwBJ,4BAA4BlG,cAAc,qCAClEyD,yBAAyBhD,QACzB6F,sBAAsBjD,UAAW,GAEjCiD,sBAAsBjD,UAAW,EACjCiD,sBAAsBjC,MAAQ,GAClC,EAGElB,gDAAmDoB,QACrD,IAAId,yBAA2Bc,MAAMG,OACjC6B,4BAA8B9C,yBAAyBnD,QAAQ,MAC/DQ,SAAWyF,4BAA4BzE,QAAkB,SAEzDmC,kBAAoBsC,4BAA4BvG,cAAc,WAAW8B,QAAqB,YAC9F0E,iBAAmBD,4BAA4BvG,cAAc,cAAc8B,QAAqB,YAC3E,OAArB0E,kBAAmD,OAAtBvC,oBAC7BD,iCAAiClD,SAAUmD,kBAAmBuC,kBA/HrB1F,YAC7C,IAAI2F,iCAAmC/G,4BAA4BM,cAC/D,qBAAuBc,SAAW,+DAElC2F,mCACAA,iCAAiCpD,UAAW,EAChD,EA0HIqD,CAAwC5F,WAG5C,IAAIwF,sBAAwBC,4BAA4BvG,cAAc,qCAElEyD,yBAAyBhD,QACzB6F,sBAAsBjD,UAAW,GAEjCiD,sBAAsBjD,UAAW,EACjCiD,sBAAsBjC,MAAQ,GAClC,EAGExB,mCAAsC0B,QACxC,IAAIoC,kBAAoBpC,MAAMG,OAG1BkC,iCAFuBD,kBAAkBrG,QAAQ,MAEON,cAAc,mBAEnC,KAAnC2G,kBAAkBtC,MAAMC,OACxBsC,iCAAiCvD,UAAW,EAE5CuD,iCAAiCvD,UAAW,CAChD,EAGED,4CAA+CmB,QACjD,IAAIoC,kBAAoBpC,MAAMG,OAG1BkC,iCAFuBD,kBAAkBrG,QAAQ,MAEON,cAAc,mBAEnC,KAAnC2G,kBAAkBtC,MAAMC,OACxBsC,iCAAiCvD,UAAW,EAE5CuD,iCAAiCvD,UAAW,CAChD,EAWFwD,SAAAC,KAJkBA,KAChBhH,eAAe4C,iBAAiB,QAASyB,iCACzC,EAAAoB,QAAAA,SAAExF,iBAAiBgH,GAAG,gBAAiBhC,sCACvC9E,4BAA4ByC,iBAAiB,QAAS2C,wCAAwC,CAChG"}