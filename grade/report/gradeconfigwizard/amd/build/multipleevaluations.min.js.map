{"version":3,"file":"multipleevaluations.min.js","sources":["../src/multipleevaluations.js"],"sourcesContent":["/// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see &lt;http://www.gnu.org/licenses/&gt;.\n// Project implemented by the &quot;Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU&quot;.\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n/*\n * Display information about all the gradereport_gradeconfigwizard modules in the requested course. *\n * @package gradeconfigwizard\n * @copyright 2023 Proyecto UNIMOODLE\n * @author UNIMOODLE Group (Coordinator) &lt;direccion.area.estrategia.digital@uva.es&gt;\n * @author Joan Carbassa (IThinkUPC) &lt;joan.carbassa@ithinkupc.com&gt;\n * @author Yerai Rodríguez (IThinkUPC) &lt;yerai.rodriguez@ithinkupc.com&gt;\n * @author Marc Geremias (IThinkUPC) &lt;marc.geremias@ithinkupc.com&gt;\n * @author Miguel Gutiérrez (UPCnet) &lt;miguel.gutierrez.jariod@upcnet.es&gt;\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n*/\n\nimport $ from 'jquery';\nimport {get_string as getString} from 'core/str';\nimport {get_strings as getStrings} from 'core/str';\n\n/* START: VARIABLES */\n\nlet multipleevaluationtable = document.getElementById('multipleevaluation-table');\nlet multipleevaluationtablebody = multipleevaluationtable.getElementsByTagName('tbody')[0];\n\nlet addcategorybtn = document.getElementById('multipleevaluations-category-create-btn');\n\nlet gradeitemsmodal = document.querySelector('#available-gradeitems-modal-id');\nlet gradeitemsmodalacceptbutton = gradeitemsmodal.querySelector('.confirm');\n\nlet saveandexitbutton = document.getElementsByClassName('saveandexit')[0];\n\n/* END: VARIABLES */\n\n/* START: TEMPLATES */\nconst removeitemiconhtml = (randomid) => `\n<i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" data-randomid=\"${randomid}\"\ntitle=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n`;\n\nconst categoryNameInput = (randomid, categoryname) => `\n${categoryname}\n<input name=\"categories[${randomid}][name]\" type=\"hidden\" value=\"${categoryname}\"/>\n`;\n\nconst newcategoryextracellshtml = (randomid, str) => `\n<td class=\"weight-1\" rowspan=\"2\">\n  <input type=\"number\" name=\"categories[${randomid}][weight]\" size=\"2\" value=\"1\">\n</td>\n<td class=\"min-grade-1\" rowspan=\"2\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <input type=\"checkbox\" class=\"mr-2\" id=\"myCheckbox\" disabled>\n      <input type=\"number\" name=\"categories[${randomid}][recitem][recitemgrade]\" size=\"2\" disabled>\n    </div>\n  </td>\n  </div>\n<td class=\"resit-1 add-btn\" rowspan=\"2\">\n  <button type=\"button\"\n    class=\"add-resit-items-btn btn btn-secondary\"\n    data-toggle=\"modal\"\n    data-target=\"#available-gradeitems-modal-id\"\n    data-gradeitemaddtarget=\"categoryresititem\"\n    data-addgradeitemdepth=\"1\" disabled>\n      ${str}\n  </button>\n</td>\n`;\n\nconst addcategoryelementsbuttonrowhtml = (randomid, str) => `\n<tr data-randomid=\"${randomid}\" data-rowtype=\"categorygradeitemaddbtn\" data-depthlevel=\"2\">\n  <td class=\"item\">\n    <button type=\"button\"\n      data-toggle=\"modal\"\n      data-target=\"#available-gradeitems-modal-id\"\n      data-gradeitemaddtarget=\"gradeitem\"\n      data-addgradeitemdepth=\"2\"\n      class=\"add-category-items-btn btn btn-secondary\">\n        ${str}\n    </button>\n  </td>\n  <td class=\"weight-2\"></td>\n  <td class=\"min-grade-2\"></td>\n  <td class=\"resit-2\"></td>\n</tr>\n`;\n\nconst categorygradeitemrowhtml = (randomid, gradeitemid, gradeitemname, str) => `\n<tr data-randomid=\"${randomid}\" data-rowtype=\"categorygradeitem\" data-gradeitemid=\"${gradeitemid}\" data-depthlevel=\"2\">\n  <td class=\"item\"\n    data-gradeitemid=\"${gradeitemid}\"\n    data-gradeitemname=\"${gradeitemname}\"\n    >\n      ${gradeitemname}\n      <input name=\"categories[${randomid}][items][${gradeitemid}][id]\" type=\"hidden\" value=\"${gradeitemid}\" />\n      <i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" data-randomid=\"${randomid}\" data-gradeitemid=\"${gradeitemid}\"\n      title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n  </td>\n  <td class=\"weight-2\">\n    <input type=\"number\" name=\"categories[${randomid}][items][${gradeitemid}][weight]\" size=\"2\" value=\"1\" />\n  </td>\n  <td class=\"min-grade-2\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <input type=\"checkbox\" class=\"mr-2\">\n        <input name=\"categories[${randomid}][items][${gradeitemid}][recitem][recitemgrade]\" type=\"number\" size=\"2\" disabled>\n      </div>\n    </div>\n  </td>\n  <td class=\"resit-2\" data-gradeitemid=\"${gradeitemid}\">\n    <button type=\"button\"\n      class=\"add-grade-item-resit-items-btn btn btn-secondary\"\n      data-gradeitemaddtarget=\"gradeitemresititem\"\n      data-toggle=\"modal\"\n      data-target=\"#available-gradeitems-modal-id\"\n      disabled>\n        ${str}\n    </button>\n  </td>\n</tr>\n`;\n\nconst categoryresitgradeitemcellhtml = (randomid, gradeitemid, gradeitemname, rowspan) => `\n<td class=\"resit-1\" rowspan=\"${rowspan}\" data-gradeitemid=\"${gradeitemid}\" data-gradeitemname=\"${gradeitemname}\">\n  ${gradeitemname}\n  <input name=\"categories[${randomid}][recitem][recitemid]\" type=\"hidden\" value=\"${gradeitemid}\"/>\n  <i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n</td>\n`;\n\nconst categorygradeitemresitgradeitemcellhtml = (randomid, gradeitemid, gradeitemname, parentgradeitemid) => `\n<td class=\"resit-2\" data-gradeitemid=\"${gradeitemid}\" data-gradeitemname=\"${gradeitemname}\">\n  ${gradeitemname}\n  <input name=\"categories[${randomid}][items][${parentgradeitemid}][recitem][recitemid]\" type=\"hidden\" value=\"${gradeitemid}\" />\n  <i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" title=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n</td>\n`;\n\nconst addcategoryresitbuttoncellenabledhtml = (randomid, str) => `\n<td class=\"resit-1 add-btn\" rowspan=\"2\" id=\"categoryresitbutton-${randomid}\">\n  <button type=\"button\"\n    class=\"add-resit-items-btn btn btn-secondary\"\n    data-toggle=\"modal\"\n    data-target=\"#available-gradeitems-modal-id\"\n    data-gradeitemaddtarget=\"categoryresititem\"\n    data-addgradeitemdepth=\"1\">\n      ${str}\n  </button>\n</td>\n`;\n\nconst addcategorygradeitemresitgradeitembuttoncellenabledhtml = (gradeitemid, str) => `\n<td class=\"resit-2 add-btn\" data-gradeitemid=\"${gradeitemid}\">\n  <button type=\"button\"\n    class=\"add-grade-item-resit-items-btn btn btn-secondary\"\n    data-gradeitemaddtarget=\"gradeitemresititem\"\n    data-toggle=\"modal\"\n    data-target=\"#available-gradeitems-modal-id\">\n      ${str}\n  </button>\n</td>\n`;\n\n/* END: TEMPLATES */\n\n/* START: FUNCTIONS */\n\nconst generateUniqueId = () => {\n    let randomid = null;\n    while (randomid === null || document.getElementById(randomid) !== null) {\n        // generate a 8 chars long random id\n        randomid = Math.random().toString(36).substring(2, 10);\n    }\n    return randomid;\n};\n\nconst getGradeitemsmodalSelectedItems = () => {\n    let gradeitems = gradeitemsmodal.querySelectorAll('input[type=\"checkbox\"]:checked:not(.d-none)');\n    return gradeitems;\n};\n\nconst removeGradeitemsmodalItems = (gradeitems) => {\n    gradeitems.forEach((gradeitem) => {\n        gradeitem.closest('div').classList.add('d-none');\n        gradeitem.checked = false;\n    });\n};\n\nconst addGradeitemsmodalItem = (gradeitemid) => {\n    let gradeitem = gradeitemsmodal.querySelector('[data-id=\"' + gradeitemid + '\"]');\n    gradeitem.closest('div').classList.remove('d-none');\n    gradeitem.checked = false;\n};\n\nconst recalculateRowspans = (randomid) => {\n    let categoryCount = 1;\n    let categoryGradeItemAddBtnCount = multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitemaddbtn\"]'\n    ).length;\n    let categoryGradeItemCount = multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"]'\n    ).length;\n    var totalItemCount = categoryGradeItemAddBtnCount + categoryGradeItemCount + categoryCount;\n    multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td'\n    ).forEach(datacell => {\n        datacell.rowSpan = totalItemCount;\n    });\n};\nconst addCategory = async (categoryname) => {\n    // In case new category is added, enable save and exit button\n    if(saveandexitbutton.classList.contains('disabled-box')){\n        saveandexitbutton.classList.remove('disabled-box');\n    }\n\n    let randomid = generateUniqueId();\n\n    let newcategoryrow = document.createElement('tr');\n    newcategoryrow.id = randomid;\n    newcategoryrow.dataset.randomid = randomid;\n    newcategoryrow.dataset.depthlevel = 1;\n    newcategoryrow.dataset.rowtype = \"category\";\n\n    let newcategorycell = document.createElement('td');\n    newcategorycell.classList.add('category');\n    newcategorycell.rowSpan = 2;\n    newcategorycell.innerHTML = categoryNameInput(randomid, categoryname) + removeitemiconhtml(randomid); //not needed\n\n    newcategoryrow.appendChild(newcategorycell);\n    await getStrings([\n        {'key': 'addelement1', component: 'gradereport_gradeconfigwizard'},\n        {'key': 'addelement2', component: 'gradereport_gradeconfigwizard'},\n    ]).then(function (str) {\n        newcategoryrow.innerHTML += newcategoryextracellshtml(randomid, str[0]);\n        multipleevaluationtablebody.appendChild(newcategoryrow);\n        newcategoryrow.insertAdjacentHTML('afterend', addcategoryelementsbuttonrowhtml(randomid, str[1]));\n    });\n\n\n    let removeitemicon = newcategoryrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeCategoryCallback);\n\n    let categorymingradecheckbox = newcategoryrow.querySelector('.min-grade-1 input[type=\"checkbox\"]');\n    categorymingradecheckbox.addEventListener('change', categoryMinGradeCheckboxChangeCallback);\n\n    let categorymingradetext = newcategoryrow.querySelector('.min-grade-1 input[type=\"number\"]');\n    categorymingradetext.addEventListener('input', categoryMinGradeTextChangeCallback);\n};\n\nconst removeCategory = (randomid) => {\n    removeCategoryResititem(randomid);\n\n    let catgorygradeitemrowstodelete = multipleevaluationtablebody.querySelectorAll(\n        'tr[data-rowtype=\"categorygradeitem\"][data-randomid=\"' + randomid + '\"]'\n    );\n    catgorygradeitemrowstodelete.forEach(catgorygradeitemrow => {\n        let randomid = catgorygradeitemrow.dataset['randomid'];\n        let gradeitemid = catgorygradeitemrow.dataset['gradeitemid'];\n        removeCategoryGradeitem(randomid, gradeitemid);\n    });\n\n    let categoryrowstodelete = multipleevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"]');\n    categoryrowstodelete.forEach(row => row.remove());\n\n    // If there are no categories left, disable save and exit button\n    let categorycount = multipleevaluationtablebody.querySelectorAll('tr[data-rowtype=\"category\"]').length;\n    if (categorycount < 1) {\n        saveandexitbutton.classList.add('disabled-box');\n    }\n};\n\nconst addCategoryGradeitems = (randomid, gradeitems) => {\n    gradeitems.forEach(gradeitem => {\n        addCategoryGradeitem(randomid, gradeitem);\n    });\n};\n\nconst addCategoryGradeitem = async (randomid, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n    let categorygradeitemaddbtn = multipleevaluationtablebody.querySelectorAll(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitemaddbtn\"]'\n    );\n    await getString('addelement3', 'gradereport_gradeconfigwizard')\n        .then(function (str) {\n        categorygradeitemaddbtn[0].insertAdjacentHTML('beforebegin',\n            categorygradeitemrowhtml(randomid, gradeitemid, gradeitemname, str));\n    });\n\n    let newcategorygradeitemrow = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"][data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n\n    let removeitemicon = newcategorygradeitemrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeCategoryGradeItemCallback);\n\n    let categorygradeitemmingradecheckbox = newcategorygradeitemrow.querySelector('.min-grade-2 input[type=\"checkbox\"]');\n    categorygradeitemmingradecheckbox.addEventListener('change', categoryGradeitemMinGradeCheckboxChangeCallback);\n\n    let categorygradeitemmingradetext = newcategorygradeitemrow.querySelector('.min-grade-2 input[type=\"number\"]');\n    categorygradeitemmingradetext.addEventListener('input', categoryGradeitemMinGradeTextChangeCallback);\n\n    let categorymingradecheckbox = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] .min-grade-1 input[type=\"checkbox\"]'\n    );\n    categorymingradecheckbox.disabled = false;\n\n    recalculateRowspans(randomid);\n};\n\nconst removeCategoryGradeitem = (randomid, gradeitemid) => {\n    let rowtodelete = multipleevaluationtablebody.querySelectorAll(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"][data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    rowtodelete.forEach(row => {\n        row.querySelectorAll('[data-gradeitemid]').forEach(row => addGradeitemsmodalItem(row.dataset['gradeitemid']));\n        row.remove();\n    });\n\n    let categorygradeitems = multipleevaluationtablebody.querySelectorAll(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"]'\n    );\n    let categorymingradecheckbox = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] .min-grade-1 input[type=\"checkbox\"]'\n    );\n    if (categorygradeitems.length > 0) {\n        categorymingradecheckbox.disabled = false;\n    } else {\n        categorymingradecheckbox.disabled = true;\n    }\n\n    addGradeitemsmodalItem(gradeitemid);\n    recalculateRowspans(randomid);\n};\n\nconst addCategoryresititem = (randomid, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n    let categoryresitcell = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td.resit-1'\n    );\n    let rowspan = categoryresitcell.getAttribute('rowspan');\n\n    let categoryresitgradeitemaddbtn = multipleevaluationtablebody.querySelector(\n        '[data-randomid=\"' + randomid + '\"] td.resit-1 .add-resit-items-btn'\n    );\n    let categoryresitgradeitemcell = categoryresitgradeitemaddbtn.closest('td');\n    categoryresitgradeitemcell.insertAdjacentHTML('beforebegin',\n        categoryresitgradeitemcellhtml(randomid, gradeitemid, gradeitemname, rowspan))\n    ;\n    categoryresitgradeitemcell.remove();\n\n    let newcategoryresitgradeitem = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td.resit-1[data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    newcategoryresitgradeitem.querySelector('.remove-item-icon').addEventListener('click', removeCategoryResitGradeitemCallback);\n};\n\nconst removeCategoryResititem = async (randomid, gradeitemid = null) => {\n    let categoryresitgradeitem = null;\n    if (gradeitemid === null) {\n        categoryresitgradeitem = multipleevaluationtablebody.querySelector('tr[data-randomid=\"' + randomid + '\"] td.resit-1');\n        gradeitemid = categoryresitgradeitem.dataset['gradeitemid'];\n    } else {\n        categoryresitgradeitem = multipleevaluationtablebody.querySelector(\n            'tr[data-randomid=\"' + randomid + '\"] td.resit-1[data-gradeitemid=\"' + gradeitemid + '\"]'\n        );\n    }\n    let categoryresitgradeitemcell = categoryresitgradeitem.closest('td');\n    await getString('addelement4', 'gradereport_gradeconfigwizard')\n        .then(function (str) {\n        categoryresitgradeitemcell.insertAdjacentHTML('afterend', addcategoryresitbuttoncellenabledhtml(randomid, str));\n        categoryresitgradeitemcell.remove();\n    });\n\n    if (gradeitemid !== undefined) {\n        addGradeitemsmodalItem(gradeitemid);\n    }\n    recalculateRowspans(randomid);\n};\n\nconst disableAddCategoryResititmeBtn = (randomid) => {\n    let addcategoryresititmebtn = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] td.resit-1.add-btn button'\n    );\n    if (addcategoryresititmebtn) {\n        addcategoryresititmebtn.disabled = true;\n    }\n};\n\nconst addCategoryGradeitemResititem = (randomid, parentgradeitem, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n\n    let categorygradeitemresitgradeitemaddbtn = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] td[data-gradeitemid=\"' +\n        parentgradeitem + '\"] ~ td.resit-2 .add-grade-item-resit-items-btn'\n    );\n    let categorygradeitemresitgradeitemcell = categorygradeitemresitgradeitemaddbtn.closest('td');\n    categorygradeitemresitgradeitemcell.insertAdjacentHTML('beforebegin',\n        categorygradeitemresitgradeitemcellhtml(randomid, gradeitemid, gradeitemname, parentgradeitem));\n    categorygradeitemresitgradeitemcell.remove();\n\n    let newcategorygradeitemresitgradeitem = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"categorygradeitem\"] td.resit-2[data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    newcategorygradeitemresitgradeitem.querySelector('.remove-item-icon')\n        .addEventListener('click', removeCategoryGradeitemResitGradeitemCallback);\n};\n\nconst removeCategoryGradeitemResititem = async (randomid, parentgradeitemid, gradeitemid) => {\n    let categoryresitgradeitemcell = multipleevaluationtablebody.querySelector(\n        'td.resit-2[data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n    await getString('addelement5', 'gradereport_gradeconfigwizard')\n        .then(function (str) {\n        categoryresitgradeitemcell.insertAdjacentHTML('afterend',\n            addcategorygradeitemresitgradeitembuttoncellenabledhtml(parentgradeitemid, str));\n        categoryresitgradeitemcell.remove();\n    });\n\n    //TODO: esto está hecho porque hasta que no se define un item de recuperación,\n    // el botón para añadir uno tiene el id del itemgrade al que irá asociado\n    if (parentgradeitemid != gradeitemid) {\n        addGradeitemsmodalItem(gradeitemid);\n    }\n    recalculateRowspans(randomid);\n};\n\nconst disableAddCategoryGradeitemResititemBtn = (randomid) => {\n    let addcategorygradeitemresititembtn = multipleevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] td.resit-2.add-btn button.add-grade-item-resit-items-btn'\n    );\n    if (addcategorygradeitemresititembtn) {\n        addcategorygradeitemresititembtn.disabled = true;\n    }\n};\n\n/* END: FUNCTIONS */\n\n/* START: CALLBACKS */\n\nconst addCategoryButtonClickCallback = () => {\n    let categorynameinput = document.getElementById('multipleevaluations-category-create-name');\n    categorynameinput.value = categorynameinput.value.trim();\n    let categoryname = categorynameinput.value;\n    if (categoryname === '') {\n        return;\n    }\n    addCategory(categoryname);\n    categorynameinput.value = '';\n};\n\nconst removeCategoryCallback = (event) => {\n    let randomid = event.target.dataset.randomid;\n    removeCategory(randomid);\n};\n\nconst removeCategoryGradeItemCallback = (event) => {\n    let randomid = event.target.dataset.randomid;\n    let gradeitemid = event.target.dataset.gradeitemid;\n    removeCategoryGradeitem(randomid, gradeitemid);\n};\n\nconst removeCategoryResitGradeitemCallback = (event) => {\n    let parenttd = event.target.closest('td');\n    let parenttr = parenttd.closest('tr');\n    let randomid = parenttr.dataset['randomid'];\n    let gradeitemid = parenttd.dataset['gradeitemid'];\n    removeCategoryResititem(randomid, gradeitemid);\n};\n\nconst removeCategoryGradeitemResitGradeitemCallback = (event) => {\n    let parenttd = event.target.closest('td');\n    let parenttr = parenttd.closest('tr');\n    let randomid = parenttr.dataset['randomid'];\n    let gradeitemid = parenttd.dataset['gradeitemid'];\n    let parentgradeitemid = parenttr.querySelector('td.item').dataset['gradeitemid'];\n    removeCategoryGradeitemResititem(randomid, parentgradeitemid, gradeitemid);\n};\n\nconst availableGradeItemsModalShowCallback = (event) => {\n    let button = event.relatedTarget;\n    let callerrandomid = button.closest('tr').dataset['randomid'];\n    let gradeitemaddtarget = button.dataset['gradeitemaddtarget'];\n    let addgradeitemdepth = button.dataset['addgradeitemdepth'];\n    let gradeitemid = button.closest('td').dataset['gradeitemid'];\n\n    gradeitemsmodal.dataset['gradeitemaddtarget'] = gradeitemaddtarget;\n    gradeitemsmodal.dataset['addgradeitemdepth'] = addgradeitemdepth;\n    gradeitemsmodal.dataset['callerrandomid'] = callerrandomid;\n    gradeitemsmodal.dataset['gradeitemid'] = gradeitemid;\n};\n\nconst availableGradeItemsModalConfirmCallback = () => {\n    let gradeitemaddtarget = gradeitemsmodal.dataset['gradeitemaddtarget'];\n    let gradeitemid = gradeitemsmodal.dataset['gradeitemid'];\n\n    let randomid = gradeitemsmodal.dataset['callerrandomid'];\n    let gradeitems = getGradeitemsmodalSelectedItems();\n\n    switch (gradeitemaddtarget) {\n        case 'gradeitem':\n            addCategoryGradeitems(randomid, gradeitems);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n        case 'categoryresititem':\n            if (gradeitems.length > 1) {\n                alert('Selecciona solo 1 gradeitem');\n                break;\n            }\n            addCategoryresititem(randomid, gradeitems[0]);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n        case 'gradeitemresititem':\n            if (gradeitems.length > 1) {\n                alert('Selecciona solo 1 gradeitem');\n                break;\n            }\n            addCategoryGradeitemResititem(randomid, gradeitemid, gradeitems[0]);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n    }\n};\n\nconst categoryMinGradeCheckboxChangeCallback = (event) => {\n    let categorymingradecheckbox = event.target;\n    let categorymingradecheckboxrow = categorymingradecheckbox.closest('tr');\n    let randomid = categorymingradecheckboxrow.dataset['randomid'];\n\n    let categoryresititemid = categorymingradecheckboxrow.querySelector('.resit-1').dataset['gradeitemid'];\n    if (categoryresititemid) {\n        removeCategoryResititem(randomid, categoryresititemid);\n        disableAddCategoryResititmeBtn(randomid);\n    }\n\n    let categorymingradeinput = categorymingradecheckboxrow.querySelector('.min-grade-1 input[type=\"number\"]');\n    if (categorymingradecheckbox.checked) {\n        categorymingradeinput.disabled = false;\n    } else {\n        categorymingradeinput.disabled = true;\n        categorymingradeinput.value = '';\n    }\n};\n\nconst categoryGradeitemMinGradeCheckboxChangeCallback = (event) => {\n    let categorymingradecheckbox = event.target;\n    let categorygradeitemchangedrow = categorymingradecheckbox.closest('tr');\n    let randomid = categorygradeitemchangedrow.dataset['randomid'];\n\n    let parentgradeitemid = categorygradeitemchangedrow.querySelector('td.item').dataset['gradeitemid'];\n    let resitgradeitemid = categorygradeitemchangedrow.querySelector('td.resit-2').dataset['gradeitemid'];\n    if (resitgradeitemid !== null && parentgradeitemid !== null) {\n        removeCategoryGradeitemResititem(randomid, parentgradeitemid, resitgradeitemid);\n        disableAddCategoryGradeitemResititemBtn(randomid);\n    }\n\n    let categorymingradeinput = categorygradeitemchangedrow.querySelector('.min-grade-2 input[type=\"number\"]');\n\n    if (categorymingradecheckbox.checked) {\n        categorymingradeinput.disabled = false;\n    } else {\n        categorymingradeinput.disabled = true;\n        categorymingradeinput.value = '';\n    }\n};\n\nconst categoryMinGradeTextChangeCallback = (event) => {\n    let mingradetextfield = event.target;\n    let mingradetextfieldrow = mingradetextfield.closest('tr');\n\n    let addCategoryGradeitemResititemBtn = mingradetextfieldrow.querySelector('.resit-1 button');\n\n    if (mingradetextfield.value.trim() === '') {\n        addCategoryGradeitemResititemBtn.disabled = true;\n    } else {\n        addCategoryGradeitemResititemBtn.disabled = false;\n    }\n};\n\nconst categoryGradeitemMinGradeTextChangeCallback = (event) => {\n    let mingradetextfield = event.target;\n    let mingradetextfieldrow = mingradetextfield.closest('tr');\n\n    let addCategoryGradeitemResititemBtn = mingradetextfieldrow.querySelector('.resit-2 button');\n\n    if (mingradetextfield.value.trim() === '') {\n        addCategoryGradeitemResititemBtn.disabled = true;\n    } else {\n        addCategoryGradeitemResititemBtn.disabled = false;\n    }\n};\n\n/* END: CALLBACKS */\n\n/* START: EVENT LISTENERS DECLARATION */\n\nexport const init = () => {\n    addcategorybtn.addEventListener('click', addCategoryButtonClickCallback);\n    $(gradeitemsmodal).on('show.bs.modal', availableGradeItemsModalShowCallback);\n    gradeitemsmodalacceptbutton.addEventListener('click', availableGradeItemsModalConfirmCallback);\n};\n\n/* END: EVENT LISTENERS DECLARATION */\n"],"names":["multipleevaluationtablebody","document","getElementById","getElementsByTagName","addcategorybtn","gradeitemsmodal","querySelector","gradeitemsmodalacceptbutton","saveandexitbutton","getElementsByClassName","addcategoryresitbuttoncellenabledhtml","randomid","str","removeGradeitemsmodalItems","gradeitems","forEach","gradeitem","closest","classList","add","checked","addGradeitemsmodalItem","gradeitemid","remove","recalculateRowspans","totalItemCount","querySelectorAll","length","datacell","rowSpan","addCategory","async","contains","Math","random","toString","substring","generateUniqueId","newcategoryrow","createElement","id","dataset","depthlevel","rowtype","newcategorycell","innerHTML","categoryname","categoryNameInput","removeitemiconhtml","appendChild","component","then","newcategoryextracellshtml","insertAdjacentHTML","addcategoryelementsbuttonrowhtml","addEventListener","removeCategoryCallback","categoryMinGradeCheckboxChangeCallback","categoryMinGradeTextChangeCallback","addCategoryGradeitem","gradeitemname","categorygradeitemaddbtn","categorygradeitemrowhtml","newcategorygradeitemrow","removeCategoryGradeItemCallback","categoryGradeitemMinGradeCheckboxChangeCallback","categoryGradeitemMinGradeTextChangeCallback","disabled","removeCategoryGradeitem","row","categorygradeitems","categorymingradecheckbox","removeCategoryResititem","categoryresitgradeitem","categoryresitgradeitemcell","undefined","removeCategoryGradeitemResititem","parentgradeitemid","addcategorygradeitemresitgradeitembuttoncellenabledhtml","addCategoryButtonClickCallback","categorynameinput","value","trim","event","catgorygradeitemrow","removeCategory","target","removeCategoryResitGradeitemCallback","parenttd","removeCategoryGradeitemResitGradeitemCallback","parenttr","availableGradeItemsModalShowCallback","button","relatedTarget","callerrandomid","gradeitemaddtarget","addgradeitemdepth","availableGradeItemsModalConfirmCallback","addCategoryGradeitems","modal","alert","rowspan","getAttribute","categoryresitgradeitemcellhtml","addCategoryresititem","parentgradeitem","categorygradeitemresitgradeitemcell","categorygradeitemresitgradeitemcellhtml","addCategoryGradeitemResititem","categorymingradecheckboxrow","categoryresititemid","addcategoryresititmebtn","disableAddCategoryResititmeBtn","categorymingradeinput","categorygradeitemchangedrow","resitgradeitemid","addcategorygradeitemresititembtn","disableAddCategoryGradeitemResititemBtn","mingradetextfield","addCategoryGradeitemResititemBtn","on"],"mappings":"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"}
