{"version":3,"file":"weightedevaluations.min.js","sources":["../src/weightedevaluations.js"],"sourcesContent":["import $ from 'jquery';\n\n/* START: VARIABLES */\n\nlet weightedevaluationtable = document.getElementById('weightedevaluations-table');\nlet weightedevaluationtablebody = weightedevaluationtable.getElementsByTagName('tbody')[0];\n\nlet addcategorybtn = document.getElementById('weightedevaluations-category-create-btn');\n\nlet gradeitemsmodal = document.querySelector('#available-gradeitems-modal-id');\nlet gradeitemsmodalacceptbutton = gradeitemsmodal.querySelector('.confirm');\n\n/* END: VARIABLES */\n\n/* START: TEMPLATES */\n\nconst categoryrowhtml = (randomid, categoryname, categorynamecontent) => `\n<tr id=\"${randomid}\" data-randomid=\"${randomid}\" data-rowtype=\"category\">\n  <td class=\"category\" rowspan=\"3\">\n    <input name=\"categories[${randomid}][name]\" type=\"hidden\" value=\"${categoryname}\"/>\n    ${categorynamecontent}\n  </td>\n</tr>\n`;\n\nconst removeitemiconhtml = (randomid) => `\n<i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" data-randomid=\"${randomid}\" \ntitle=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n`;\n\nconst addsubcategorybuttonrowhtml = (randomid) => `\n<tr data-randomid=\"${randomid}\" data-rowtype=\"subcategory\">\n  <td class=\"subcategory add-btn\" rowspan=\"2\">\n    <button type=\"button\" class=\"add-subcategory-btn align-items-center block-add btn btn-secondary d-flex\">\n      <span class=\"pluscontainer icon-no-margin icon-size-3 d-flex p-2 mr-3\">\n          <i class=\"icon fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n      </span>\n      <span>Añadir itinerario</span>\n    </button>\n  </td>\n</tr>\n`;\n\nconst subcategoryrowhtml = (randomid, subrandomid) => `\n<tr id=\"'${subrandomid}\" data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" data-rowtype=\"subcategory\">\n  <td class=\"subcategory\" rowspan=\"2\">\n    <input type=\"text\" name=\"categories[${randomid}][subcategories][${subrandomid}][name]\" value=\"\">${removeitemiconhtml(randomid)}\n  </td>\n  <td class=\"weight-1\">\n    <input type=\"number\" name=\"categories[${randomid}][subcategories][${subrandomid}][weight]\" size=\"4\" value=\"1\">\n  </td>\n</tr>\n`;\n\nconst addsubcategorygradeitembuttonrowhtml = (randomid, subrandomid) => `\n<tr data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" data-rowtype=\"subcategorygradeitem\">\n  <td class=\"subcategorygradeitem add-btn\">\n    <button type=\"button\"\n      class=\"add-subcategorygradeitem-btn align-items-center block-add btn btn-secondary d-flex\"\n      data-gradeitemaddtarget=\"subcategorygradeitem\"\n      data-toggle=\"modal\"\n      data-target=\"#available-gradeitems-modal-id\">\n      <span class=\"pluscontainer icon-no-margin icon-size-3 d-flex p-2 mr-3\">\n          <i class=\"icon fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n      </span>\n      <span>Añadir elementos</span>\n    </button>\n  </td>\n  <td class=\"weight-2\">\n  </td>\n</tr>\n`;\n\nconst addsubcategorygradeitememptyrowhtml = (randomid, subrandomid) => `\n<tr data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" data-rowtype=\"subcategorygradeitem\">\n  <td class=\"subcategorygradeitem\">\n  </td>\n  <td class=\"weight-2\">\n  </td>\n</tr>\n`;\n\nconst subcategorygradeitemrowhtml = (randomid, subrandomid, gradeitemid, gradeitemname) => `\n<tr data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" \ndata-gradeitemid=\"${gradeitemid}\" data-rowtype=\"subcategorygradeitem\">\n  <td class=\"subcategorygradeitem\">\n  ${gradeitemname}${removeitemiconhtml(randomid)}\n  <input name=\"categories[${randomid}][subcategories][${subrandomid}][items][${gradeitemid}][id]\" \n  value=\"${gradeitemid}\" type=\"hidden\">\n  </td>\n  <td class=\"weight-2\">\n    <input type=\"number\" name=\"categories[${randomid}][subcategories][${subrandomid}][items][${gradeitemid}][weight]\" \n    size=\"4\" value=\"1\">\n  </td>\n</tr>\n`;\n/* END: TEMPLATES */\n\n/* START: FUNCTIONS */\n\nconst generateUniqueId = () => {\n    let randomid = null;\n    while (randomid === null || document.getElementById(randomid) !== null) {\n        // generate a 8 chars long random id\n        randomid = Math.random().toString(36).substring(2, 10);\n    }\n    return randomid;\n};\n\n/* START: FUNCTIONS: GRADEITEMS MODAL */\n\nconst getGradeitemsmodalSelectedItems = () => {\n    let gradeitems = gradeitemsmodal.querySelectorAll('input[type=\"checkbox\"]:checked:not(.d-none)');\n    return gradeitems;\n};\n\nconst removeGradeitemsmodalItems = (gradeitems) => {\n    gradeitems.forEach((gradeitem) => {\n        gradeitem.closest('div').classList.add('d-none');\n        gradeitem.checked = false;\n    });\n};\n\nconst addGradeitemsmodalItem = (gradeitemid) => {\n    let gradeitem = gradeitemsmodal.querySelector('[data-id=\"' + gradeitemid + '\"]');\n    gradeitem.closest('div').classList.remove('d-none');\n    gradeitem.checked = false;\n};\n\n/* END: FUNCTIONS: GRADEITEMS MODAL */\n\nconst recalculateRowspans = (randomid) => {\n    // Category\n    var categorytotalItemCount = weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"]').length;\n    weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td')\n        .forEach(datacell => {\n            datacell.rowSpan = categorytotalItemCount;\n        });\n\n    // Subcategory\n    weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"subcategory\"]')\n        .forEach(row => {\n            let subrandomid = row.dataset.subrandomid;\n            if (!subrandomid) {\n                return;\n            }\n            let subcategorygradeitemsCount = weightedevaluationtablebody.querySelectorAll(\n                'tr[data-rowtype=\"subcategorygradeitem\"][data-subrandomid=\"' + subrandomid + '\"]'\n            ).length;\n            var subcategorycategorytotalItemCount = 1 + subcategorygradeitemsCount;\n            row.querySelectorAll('td').forEach(datacell => {\n                datacell.rowSpan = subcategorycategorytotalItemCount;\n            });\n        });\n};\n\nconst addCategory = (categoryname) => {\n    let randomid = generateUniqueId();\n    let categorynamecontent = categoryname + removeitemiconhtml(randomid);\n\n    let newcategoryrowhtml = categoryrowhtml(randomid, categoryname, categorynamecontent);\n\n    let newrowshtml = newcategoryrowhtml;\n    newrowshtml += addsubcategorybuttonrowhtml(randomid);\n    newrowshtml += addsubcategorygradeitememptyrowhtml(randomid, \"\");\n\n    let weightedevaluationtablebodylastrow = weightedevaluationtablebody.querySelector('tr:last-child');\n    if (weightedevaluationtablebodylastrow) {\n        weightedevaluationtablebodylastrow.insertAdjacentHTML('afterend', newrowshtml);\n    } else {\n        weightedevaluationtablebody.innerHTML += newrowshtml;\n    }\n\n    let newcategoryrow = weightedevaluationtablebody.querySelector('[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"]');\n    let newsubcategorybuttonrow = weightedevaluationtablebody.querySelector(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"subcategory\"]'\n    );\n\n    let removeitemicon = newcategoryrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeCategoryCallback);\n\n    let addsubcategorybutton = newsubcategorybuttonrow.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] .subcategory .add-subcategory-btn'\n    );\n    addsubcategorybutton.addEventListener('click', addSubcategoryButtonCallback);\n};\n\nconst removeCategory = (randomid) => {\n    let subcategoryrowstodelete = weightedevaluationtablebody.querySelectorAll(\n        'tr[data-rowtype=\"subcategory\"][data-randomid=\"' + randomid + '\"][data-subrandomid]'\n    );\n    subcategoryrowstodelete.forEach(subcategoryrow => {\n        let subrandomid = subcategoryrow.dataset['subrandomid'];\n        removeSubcategory(randomid, subrandomid);\n    });\n\n    let categoryrowstodelete = weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"]');\n    categoryrowstodelete.forEach(row => row.remove());\n};\n\nconst addSubcategory = (randomid) => {\n    let subrandomid = generateUniqueId();\n    let subcategoryaddbtnrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"subcategory\"] .add-subcategory-btn'\n    ).closest('tr');\n    subcategoryaddbtnrow.insertAdjacentHTML('beforebegin', subcategoryrowhtml(randomid, subrandomid)\n        + addsubcategorygradeitembuttonrowhtml(randomid, subrandomid));\n\n    let newsubcategoryrow = weightedevaluationtablebody.querySelector('' +\n        'tr[data-randomid=\"' + randomid + '\"][data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategory\"]'\n    );\n\n    let removeitemicon = newsubcategoryrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeSubcategoryCallback);\n\n    recalculateRowspans(randomid);\n};\n\nconst removeSubcategory = (randomid, subrandomid) => {\n    let subcategorygradeitemrowtodelete = weightedevaluationtablebody.querySelectorAll('' +\n        'tr[data-subrandomid=\"' + subrandomid + '\"][data-gradeitemid][data-rowtype=\"subcategorygradeitem\"]'\n    );\n    subcategorygradeitemrowtodelete.forEach(row => {\n        removeSubcategoryGradeitem(randomid, subrandomid, row.dataset.gradeitemid);\n    });\n    let remainingrowtodelete = weightedevaluationtablebody.querySelectorAll(\n        'tr[data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategorygradeitem\"]'\n    );\n    remainingrowtodelete.forEach(row => {\n        row.remove();\n    });\n\n    let subcategoryrowtodelete = weightedevaluationtablebody.querySelector(\n        'tr[data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategory\"]'\n    );\n    subcategoryrowtodelete.remove();\n\n    recalculateRowspans(randomid);\n};\n\nconst addSubcategoryGradeitems = (randomid, subrandomid, gradeitems) => {\n    gradeitems.forEach(gradeitem => {\n        addSubcategoryGradeitem(randomid, subrandomid, gradeitem);\n    });\n};\n\nconst addSubcategoryGradeitem = (randomid, subrandomid, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n    let subcategorygradeitemaddbtnrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategorygradeitem\"]' +\n        ' .subcategorygradeitem .add-subcategorygradeitem-btn'\n    ).closest('tr');\n    subcategorygradeitemaddbtnrow.insertAdjacentHTML('beforebegin',\n        subcategorygradeitemrowhtml(randomid, subrandomid, gradeitemid, gradeitemname));\n\n    let newsubcategorygradeitemrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"]' +\n        '[data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategorygradeitem\"][data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n\n    let removeitemicon = newsubcategorygradeitemrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeSubcategoryGradeItemCallback);\n\n    recalculateRowspans(randomid);\n};\n\nconst removeSubcategoryGradeitem = (randomid, subrandomid, gradeitemid) => {\n    let subcategorygradeitemrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-subrandomid=\"' + subrandomid + '\"]' +\n        '[data-gradeitemid=\"' + gradeitemid + '\"][data-rowtype=\"subcategorygradeitem\"]'\n    );\n    subcategorygradeitemrow.remove();\n\n    addGradeitemsmodalItem(gradeitemid);\n    recalculateRowspans(randomid);\n};\n\n/* END: FUNCTIONS */\n\n/* START: CALLBACKS */\n\nconst addCategoryButtonClickCallback = () => {\n    let categorynameinput = document.getElementById('weightedevaluations-category-create-name');\n    categorynameinput.value = categorynameinput.value.trim();\n    let categoryname = categorynameinput.value;\n    if (categoryname === '') {\n        return;\n    }\n    addCategory(categoryname);\n    categorynameinput.value = '';\n};\n\nconst availableGradeItemsModalShowCallback = (event) => {\n    //@TODO check if all works properly\n    let button = event.relatedTarget;\n    let callerrandomid = button.closest('tr').dataset['randomid'];\n    let gradeitemaddtarget = button.dataset['gradeitemaddtarget'];\n    let gradeitemid = button.closest('td').dataset['gradeitemid'];\n    let callersubrandomid = button.closest('tr').dataset.subrandomid;\n\n    gradeitemsmodal.dataset['gradeitemaddtarget'] = gradeitemaddtarget;\n    gradeitemsmodal.dataset['callerrandomid'] = callerrandomid;\n    gradeitemsmodal.dataset['callersubrandomid'] = callersubrandomid;\n    gradeitemsmodal.dataset['gradeitemid'] = gradeitemid;\n};\n\nconst availableGradeItemsModalConfirmCallback = () => {\n    let gradeitemaddtarget = gradeitemsmodal.dataset['gradeitemaddtarget'];\n\n    let randomid = gradeitemsmodal.dataset['callerrandomid'];\n    let subrandomid = gradeitemsmodal.dataset['callersubrandomid'];\n    let gradeitems = getGradeitemsmodalSelectedItems();\n\n    switch (gradeitemaddtarget) {\n        case 'subcategorygradeitem':\n            addSubcategoryGradeitems(randomid, subrandomid, gradeitems);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n    }\n};\n\nconst removeCategoryCallback = (event) => {\n    let randomid = event.target.dataset.randomid;\n    removeCategory(randomid);\n};\n\nconst addSubcategoryButtonCallback = (event) => {\n    let randomid = event.target.closest('tr').dataset['randomid'];\n    addSubcategory(randomid);\n};\n\nconst removeSubcategoryCallback = (event) => {\n    let targetrow = event.target.closest('tr');\n    let randomid = targetrow.dataset.randomid;\n    let subrandomid = targetrow.dataset.subrandomid;\n    removeSubcategory(randomid, subrandomid);\n};\n\nconst removeSubcategoryGradeItemCallback = (event) => {\n    let targetrow = event.target.closest('tr');\n    let randomid = targetrow.dataset.randomid;\n    let subrandomid = targetrow.dataset.subrandomid;\n    let gradeitemid = targetrow.dataset.gradeitemid;\n    removeSubcategoryGradeitem(randomid, subrandomid, gradeitemid);\n};\n\n/* END: CALLBACKS */\n\n/* START: EVENT LISTENERS DECLARATION */\n\nexport const init = () => {\n    addcategorybtn.addEventListener('click', addCategoryButtonClickCallback);\n    $(gradeitemsmodal).on('show.bs.modal', availableGradeItemsModalShowCallback);\n    gradeitemsmodalacceptbutton.addEventListener('click', availableGradeItemsModalConfirmCallback);\n};\n\n/* END: EVENT LISTENERS DECLARATION */"],"names":["obj","_jquery","__esModule","default","weightedevaluationtablebody","document","getElementById","getElementsByTagName","addcategorybtn","gradeitemsmodal","querySelector","gradeitemsmodalacceptbutton","removeitemiconhtml","randomid","concat","generateUniqueId","Math","random","toString","substring","recalculateRowspans","categorytotalItemCount","querySelectorAll","length","forEach","datacell","rowSpan","row","subrandomid","dataset","subcategorycategorytotalItemCount","addSubcategory","closest","insertAdjacentHTML","subcategoryrowhtml","addsubcategorygradeitembuttonrowhtml","addEventListener","removeSubcategoryCallback","removeSubcategory","removeSubcategoryGradeitem","gradeitemid","remove","addSubcategoryGradeitem","gradeitem","gradeitemname","subcategorygradeitemrowhtml","removeSubcategoryGradeItemCallback","classList","checked","addGradeitemsmodalItem","addCategoryButtonClickCallback","categorynameinput","value","trim","categoryname","newcategoryrowhtml","categoryrowhtml","categorynamecontent","newrowshtml","addsubcategorybuttonrowhtml","addsubcategorygradeitememptyrowhtml","weightedevaluationtablebodylastrow","innerHTML","newcategoryrow","newsubcategorybuttonrow","removeCategoryCallback","addSubcategoryButtonCallback","addCategory","availableGradeItemsModalShowCallback","event","button","relatedTarget","callerrandomid","gradeitemaddtarget","callersubrandomid","availableGradeItemsModalConfirmCallback","gradeitems","addSubcategoryGradeitems","add","removeGradeitemsmodalItems","$","modal","subcategoryrow","removeCategory","target","targetrow","_exports","init","on"],"mappings":"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"}