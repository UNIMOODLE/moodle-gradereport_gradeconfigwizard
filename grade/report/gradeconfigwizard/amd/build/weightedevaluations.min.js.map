{"version":3,"file":"weightedevaluations.min.js","sources":["../src/weightedevaluations.js"],"sourcesContent":["/// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see &lt;http://www.gnu.org/licenses/&gt;.\n// Project implemented by the &quot;Recovery, Transformation and Resilience Plan.\n// Funded by the European Union - Next GenerationEU&quot;.\n//\n// Produced by the UNIMOODLE University Group: Universities of\n// Valladolid, Complutense de Madrid, UPV/EHU, León, Salamanca,\n// Illes Balears, Valencia, Rey Juan Carlos, La Laguna, Zaragoza, Málaga,\n// Córdoba, Extremadura, Vigo, Las Palmas de Gran Canaria y Burgos.\n/*\n * Display information about all the gradereport_gradeconfigwizard modules in the requested course. *\n * @package gradeconfigwizard\n * @copyright 2023 Proyecto UNIMOODLE\n * @author UNIMOODLE Group (Coordinator) &lt;direccion.area.estrategia.digital@uva.es&gt;\n * @author Joan Carbassa (IThinkUPC) &lt;joan.carbassa@ithinkupc.com&gt;\n * @author Yerai Rodríguez (IThinkUPC) &lt;yerai.rodriguez@ithinkupc.com&gt;\n * @author Marc Geremias (IThinkUPC) &lt;marc.geremias@ithinkupc.com&gt;\n * @author Miguel Gutiérrez (UPCnet) &lt;miguel.gutierrez.jariod@upcnet.es&gt;\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n*/\n\nimport $ from 'jquery';\nimport {get_string as getString} from 'core/str';\n\n/* START: VARIABLES */\n\nlet weightedevaluationtable = document.getElementById('weightedevaluations-table');\nlet weightedevaluationtablebody = weightedevaluationtable.getElementsByTagName('tbody')[0];\n\nlet addcategorybtn = document.getElementById('weightedevaluations-category-create-btn');\n\nlet gradeitemsmodal = document.querySelector('#available-gradeitems-modal-id');\nlet gradeitemsmodalacceptbutton = gradeitemsmodal.querySelector('.confirm');\n\nlet saveandexitbutton = document.getElementsByClassName('saveandexit')[0];\n\n/* END: VARIABLES */\n\n/* START: TEMPLATES */\nconst categoryrowhtml = (randomid, categoryname, categorynamecontent) => `\n<tr id=\"${randomid}\" data-randomid=\"${randomid}\" data-rowtype=\"category\">\n  <td class=\"category\" rowspan=\"3\">\n    <input name=\"categories[${randomid}][name]\" type=\"hidden\" value=\"${categoryname}\"/>\n    ${categorynamecontent}\n  </td>\n</tr>\n`;\n\nconst removeitemiconhtml = (randomid) => `\n<i class=\"fa fa-fw fa-trash-o icon remove-item-icon\" data-randomid=\"${randomid}\"\ntitle=\"Remove element\" role=\"img\" aria-label=\"Remove element\"></i>\n`;\n\nconst addsubcategorybuttonrowhtml = (randomid, str) => `\n<tr data-randomid=\"${randomid}\" data-rowtype=\"subcategory\">\n  <td class=\"subcategory add-btn\" rowspan=\"2\">\n    <button type=\"button\" class=\"add-subcategory-btn align-items-center block-add btn btn-secondary d-flex\">\n      <span class=\"pluscontainer icon-no-margin icon-size-3 d-flex p-2 mr-3\">\n          <i class=\"icon fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n      </span>\n      <span>${str}</span>\n    </button>\n  </td>\n</tr>\n`;\n\nconst subcategoryrowhtml = (randomid, subrandomid) => `\n<tr id=\"'${subrandomid}\" data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" data-rowtype=\"subcategory\">\n  <td class=\"subcategory\" rowspan=\"2\">\n    <input type=\"text\" name=\"categories[${randomid}][subcategories][${subrandomid}][name]\" value=\"\">${removeitemiconhtml(randomid)}\n  </td>\n  <td class=\"weight-1\">\n    <input type=\"number\" name=\"categories[${randomid}][subcategories][${subrandomid}][weight]\" size=\"4\" value=\"1\">\n  </td>\n</tr>\n`;\n\nconst addsubcategorygradeitembuttonrowhtml = (randomid, subrandomid, str) => `\n<tr data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" data-rowtype=\"subcategorygradeitem\">\n  <td class=\"subcategorygradeitem add-btn\">\n    <button type=\"button\"\n      class=\"add-subcategorygradeitem-btn align-items-center block-add btn btn-secondary d-flex\"\n      data-gradeitemaddtarget=\"subcategorygradeitem\"\n      data-toggle=\"modal\"\n      data-target=\"#available-gradeitems-modal-id\">\n      <span class=\"pluscontainer icon-no-margin icon-size-3 d-flex p-2 mr-3\">\n          <i class=\"icon fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n      </span>\n      <span>${str}</span>\n    </button>\n  </td>\n  <td class=\"weight-2\">\n  </td>\n</tr>\n`;\n\nconst addsubcategorygradeitememptyrowhtml = (randomid, subrandomid) => `\n<tr data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\" data-rowtype=\"subcategorygradeitem\">\n  <td class=\"subcategorygradeitem\">\n  </td>\n  <td class=\"weight-2\">\n  </td>\n</tr>\n`;\n\nconst subcategorygradeitemrowhtml = (randomid, subrandomid, gradeitemid, gradeitemname) => `\n<tr data-randomid=\"${randomid}\" data-subrandomid=\"${subrandomid}\"\ndata-gradeitemid=\"${gradeitemid}\" data-rowtype=\"subcategorygradeitem\">\n  <td class=\"subcategorygradeitem\">\n  ${gradeitemname}${removeitemiconhtml(randomid)}\n  <input name=\"categories[${randomid}][subcategories][${subrandomid}][items][${gradeitemid}][id]\"\n  value=\"${gradeitemid}\" type=\"hidden\">\n  </td>\n  <td class=\"weight-2\">\n    <input type=\"number\" name=\"categories[${randomid}][subcategories][${subrandomid}][items][${gradeitemid}][weight]\"\n    size=\"4\" value=\"1\">\n  </td>\n</tr>\n`;\n/* END: TEMPLATES */\n\n/* START: FUNCTIONS */\n\nconst generateUniqueId = () => {\n    let randomid = null;\n    while (randomid === null || document.getElementById(randomid) !== null) {\n        // generate a 8 chars long random id\n        randomid = Math.random().toString(36).substring(2, 10);\n    }\n    return randomid;\n};\n\n/* START: FUNCTIONS: GRADEITEMS MODAL */\n\nconst getGradeitemsmodalSelectedItems = () => {\n    let gradeitems = gradeitemsmodal.querySelectorAll('input[type=\"checkbox\"]:checked:not(.d-none)');\n    return gradeitems;\n};\n\nconst removeGradeitemsmodalItems = (gradeitems) => {\n    gradeitems.forEach((gradeitem) => {\n        gradeitem.closest('div').classList.add('d-none');\n        gradeitem.checked = false;\n    });\n};\n\nconst addGradeitemsmodalItem = (gradeitemid) => {\n    let gradeitem = gradeitemsmodal.querySelector('[data-id=\"' + gradeitemid + '\"]');\n    gradeitem.closest('div').classList.remove('d-none');\n    gradeitem.checked = false;\n};\n\n/* END: FUNCTIONS: GRADEITEMS MODAL */\n\nconst recalculateRowspans = (randomid) => {\n    // Category\n    var categorytotalItemCount = weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"]').length;\n    weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"] td')\n        .forEach(datacell => {\n            datacell.rowSpan = categorytotalItemCount;\n        });\n\n    // Subcategory\n    weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"subcategory\"]')\n        .forEach(row => {\n            let subrandomid = row.dataset.subrandomid;\n            if (!subrandomid) {\n                return;\n            }\n            let subcategorygradeitemsCount = weightedevaluationtablebody.querySelectorAll(\n                'tr[data-rowtype=\"subcategorygradeitem\"][data-subrandomid=\"' + subrandomid + '\"]'\n            ).length;\n            var subcategorycategorytotalItemCount = 1 + subcategorygradeitemsCount;\n            row.querySelectorAll('td').forEach(datacell => {\n                datacell.rowSpan = subcategorycategorytotalItemCount;\n            });\n        });\n};\n\nconst addCategory = async (categoryname) => {\n    // In case new category is added, enable save and exit button\n    if(saveandexitbutton.classList.contains('disabled-box')){\n        saveandexitbutton.classList.remove('disabled-box');\n    }\n\n    let randomid = generateUniqueId();\n    let categorynamecontent = categoryname + removeitemiconhtml(randomid);\n\n    let newcategoryrowhtml = categoryrowhtml(randomid, categoryname, categorynamecontent);\n\n    let newrowshtml = newcategoryrowhtml;\n\n    await getString('additinerary1', 'gradereport_gradeconfigwizard')\n    .then(function (str) {\n        newrowshtml += addsubcategorybuttonrowhtml(randomid, str);\n    });\n    newrowshtml += addsubcategorygradeitememptyrowhtml(randomid, \"\");\n\n    let weightedevaluationtablebodylastrow = weightedevaluationtablebody.querySelector('tr:last-child');\n    if (weightedevaluationtablebodylastrow) {\n        weightedevaluationtablebodylastrow.insertAdjacentHTML('afterend', newrowshtml);\n    } else {\n        weightedevaluationtablebody.innerHTML += newrowshtml;\n    }\n\n    let newcategoryrow = weightedevaluationtablebody.querySelector('[data-randomid=\"' + randomid + '\"][data-rowtype=\"category\"]');\n    let newsubcategorybuttonrow = weightedevaluationtablebody.querySelector(\n        '[data-randomid=\"' + randomid + '\"][data-rowtype=\"subcategory\"]'\n    );\n\n    let removeitemicon = newcategoryrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeCategoryCallback);\n\n    let addsubcategorybutton = newsubcategorybuttonrow.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"] .subcategory .add-subcategory-btn'\n    );\n    addsubcategorybutton.addEventListener('click', addSubcategoryButtonCallback);\n};\n\nconst removeCategory = (randomid) => {\n    let subcategoryrowstodelete = weightedevaluationtablebody.querySelectorAll(\n        'tr[data-rowtype=\"subcategory\"][data-randomid=\"' + randomid + '\"][data-subrandomid]'\n    );\n    subcategoryrowstodelete.forEach(subcategoryrow => {\n        let subrandomid = subcategoryrow.dataset['subrandomid'];\n        removeSubcategory(randomid, subrandomid);\n    });\n\n    let categoryrowstodelete = weightedevaluationtablebody.querySelectorAll('tr[data-randomid=\"' + randomid + '\"]');\n    categoryrowstodelete.forEach(row => row.remove());\n\n    // If there are no categories left, disable save and exit button\n    let categorycount = weightedevaluationtablebody.querySelectorAll('tr[data-rowtype=\"category\"]').length;\n    if (categorycount < 1) {\n        saveandexitbutton.classList.add('disabled-box');\n    }\n};\n\nconst addSubcategory = async (randomid) => {\n    let subrandomid = generateUniqueId();\n    let subcategoryaddbtnrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-rowtype=\"subcategory\"] .add-subcategory-btn'\n    ).closest('tr');\n\n    await getString('additinerary2', 'gradereport_gradeconfigwizard')\n    .then(function (str) {\n        subcategoryaddbtnrow.insertAdjacentHTML('beforebegin', subcategoryrowhtml(randomid, subrandomid)\n            + addsubcategorygradeitembuttonrowhtml(randomid, subrandomid, str));\n    });\n\n    let newsubcategoryrow = weightedevaluationtablebody.querySelector('' +\n        'tr[data-randomid=\"' + randomid + '\"][data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategory\"]'\n    );\n\n    let removeitemicon = newsubcategoryrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeSubcategoryCallback);\n\n    recalculateRowspans(randomid);\n};\n\nconst removeSubcategory = (randomid, subrandomid) => {\n    let subcategorygradeitemrowtodelete = weightedevaluationtablebody.querySelectorAll('' +\n        'tr[data-subrandomid=\"' + subrandomid + '\"][data-gradeitemid][data-rowtype=\"subcategorygradeitem\"]'\n    );\n    subcategorygradeitemrowtodelete.forEach(row => {\n        removeSubcategoryGradeitem(randomid, subrandomid, row.dataset.gradeitemid);\n    });\n    let remainingrowtodelete = weightedevaluationtablebody.querySelectorAll(\n        'tr[data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategorygradeitem\"]'\n    );\n    remainingrowtodelete.forEach(row => {\n        row.remove();\n    });\n\n    let subcategoryrowtodelete = weightedevaluationtablebody.querySelector(\n        'tr[data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategory\"]'\n    );\n    subcategoryrowtodelete.remove();\n\n    recalculateRowspans(randomid);\n};\n\nconst addSubcategoryGradeitems = (randomid, subrandomid, gradeitems) => {\n    gradeitems.forEach(gradeitem => {\n        addSubcategoryGradeitem(randomid, subrandomid, gradeitem);\n    });\n};\n\nconst addSubcategoryGradeitem = (randomid, subrandomid, gradeitem) => {\n    let gradeitemid = gradeitem.dataset['id'];\n    let gradeitemname = gradeitem.dataset['displayname'];\n    let subcategorygradeitemaddbtnrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategorygradeitem\"]' +\n        ' .subcategorygradeitem .add-subcategorygradeitem-btn'\n    ).closest('tr');\n    subcategorygradeitemaddbtnrow.insertAdjacentHTML('beforebegin',\n        subcategorygradeitemrowhtml(randomid, subrandomid, gradeitemid, gradeitemname));\n\n    let newsubcategorygradeitemrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"]' +\n        '[data-subrandomid=\"' + subrandomid + '\"][data-rowtype=\"subcategorygradeitem\"][data-gradeitemid=\"' + gradeitemid + '\"]'\n    );\n\n    let removeitemicon = newsubcategorygradeitemrow.querySelector('.remove-item-icon');\n    removeitemicon.addEventListener('click', removeSubcategoryGradeItemCallback);\n\n    recalculateRowspans(randomid);\n};\n\nconst removeSubcategoryGradeitem = (randomid, subrandomid, gradeitemid) => {\n    let subcategorygradeitemrow = weightedevaluationtablebody.querySelector(\n        'tr[data-randomid=\"' + randomid + '\"][data-subrandomid=\"' + subrandomid + '\"]' +\n        '[data-gradeitemid=\"' + gradeitemid + '\"][data-rowtype=\"subcategorygradeitem\"]'\n    );\n    subcategorygradeitemrow.remove();\n\n    addGradeitemsmodalItem(gradeitemid);\n    recalculateRowspans(randomid);\n};\n\n/* END: FUNCTIONS */\n\n/* START: CALLBACKS */\n\nconst addCategoryButtonClickCallback = () => {\n    let categorynameinput = document.getElementById('weightedevaluations-category-create-name');\n    categorynameinput.value = categorynameinput.value.trim();\n    let categoryname = categorynameinput.value;\n    if (categoryname === '') {\n        return;\n    }\n    addCategory(categoryname);\n    categorynameinput.value = '';\n};\n\nconst availableGradeItemsModalShowCallback = (event) => {\n    //@TODO check if all works properly\n    let button = event.relatedTarget;\n    let callerrandomid = button.closest('tr').dataset['randomid'];\n    let gradeitemaddtarget = button.dataset['gradeitemaddtarget'];\n    let gradeitemid = button.closest('td').dataset['gradeitemid'];\n    let callersubrandomid = button.closest('tr').dataset.subrandomid;\n\n    gradeitemsmodal.dataset['gradeitemaddtarget'] = gradeitemaddtarget;\n    gradeitemsmodal.dataset['callerrandomid'] = callerrandomid;\n    gradeitemsmodal.dataset['callersubrandomid'] = callersubrandomid;\n    gradeitemsmodal.dataset['gradeitemid'] = gradeitemid;\n};\n\nconst availableGradeItemsModalConfirmCallback = () => {\n    let gradeitemaddtarget = gradeitemsmodal.dataset['gradeitemaddtarget'];\n\n    let randomid = gradeitemsmodal.dataset['callerrandomid'];\n    let subrandomid = gradeitemsmodal.dataset['callersubrandomid'];\n    let gradeitems = getGradeitemsmodalSelectedItems();\n\n    switch (gradeitemaddtarget) {\n        case 'subcategorygradeitem':\n            addSubcategoryGradeitems(randomid, subrandomid, gradeitems);\n            removeGradeitemsmodalItems(gradeitems);\n            $(gradeitemsmodal).modal('hide');\n            break;\n    }\n};\n\nconst removeCategoryCallback = (event) => {\n    let randomid = event.target.dataset.randomid;\n    removeCategory(randomid);\n};\n\nconst addSubcategoryButtonCallback = (event) => {\n    let randomid = event.target.closest('tr').dataset['randomid'];\n    addSubcategory(randomid);\n};\n\nconst removeSubcategoryCallback = (event) => {\n    let targetrow = event.target.closest('tr');\n    let randomid = targetrow.dataset.randomid;\n    let subrandomid = targetrow.dataset.subrandomid;\n    removeSubcategory(randomid, subrandomid);\n};\n\nconst removeSubcategoryGradeItemCallback = (event) => {\n    let targetrow = event.target.closest('tr');\n    let randomid = targetrow.dataset.randomid;\n    let subrandomid = targetrow.dataset.subrandomid;\n    let gradeitemid = targetrow.dataset.gradeitemid;\n    removeSubcategoryGradeitem(randomid, subrandomid, gradeitemid);\n};\n\n/* END: CALLBACKS */\n\n/* START: EVENT LISTENERS DECLARATION */\n\nexport const init = () => {\n    addcategorybtn.addEventListener('click', addCategoryButtonClickCallback);\n    $(gradeitemsmodal).on('show.bs.modal', availableGradeItemsModalShowCallback);\n    gradeitemsmodalacceptbutton.addEventListener('click', availableGradeItemsModalConfirmCallback);\n};\n\n/* END: EVENT LISTENERS DECLARATION */\n"],"names":["weightedevaluationtablebody","document","getElementById","getElementsByTagName","addcategorybtn","gradeitemsmodal","querySelector","gradeitemsmodalacceptbutton","saveandexitbutton","getElementsByClassName","removeitemiconhtml","randomid","generateUniqueId","Math","random","toString","substring","recalculateRowspans","categorytotalItemCount","querySelectorAll","length","forEach","datacell","rowSpan","row","subrandomid","dataset","subcategorycategorytotalItemCount","addSubcategory","async","subcategoryaddbtnrow","closest","then","str","insertAdjacentHTML","subcategoryrowhtml","addsubcategorygradeitembuttonrowhtml","addEventListener","removeSubcategoryCallback","removeSubcategory","removeSubcategoryGradeitem","gradeitemid","remove","addSubcategoryGradeitem","gradeitem","gradeitemname","subcategorygradeitemrowhtml","removeSubcategoryGradeItemCallback","classList","checked","addGradeitemsmodalItem","addCategoryButtonClickCallback","categorynameinput","value","trim","categoryname","contains","categorynamecontent","newcategoryrowhtml","categoryrowhtml","newrowshtml","addsubcategorybuttonrowhtml","addsubcategorygradeitememptyrowhtml","weightedevaluationtablebodylastrow","innerHTML","newcategoryrow","newsubcategorybuttonrow","removeCategoryCallback","addSubcategoryButtonCallback","addCategory","availableGradeItemsModalShowCallback","event","button","relatedTarget","callerrandomid","gradeitemaddtarget","callersubrandomid","availableGradeItemsModalConfirmCallback","gradeitems","addSubcategoryGradeitems","add","removeGradeitemsmodalItems","modal","subcategoryrow","removeCategory","target","targetrow","on"],"mappings":"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"}
